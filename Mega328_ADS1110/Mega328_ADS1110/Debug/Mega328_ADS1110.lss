
Mega328_ADS1110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000012f8  0000138c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011a  0080011a  000013a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001404  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001444  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014b2  00000000  00000000  00001594  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b89  00000000  00000000  00002a46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009b5  00000000  00000000  000035cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00003f84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000603  00000000  00000000  00004220  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ec  00000000  00000000  00004823  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000510f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e8 ef       	ldi	r30, 0xF8	; 248
     17e:	f2 e1       	ldi	r31, 0x12	; 18
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 31       	cpi	r26, 0x1A	; 26
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	aa e1       	ldi	r26, 0x1A	; 26
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a0 32       	cpi	r26, 0x20	; 32
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 ae 03 	call	0x75c	; 0x75c <main>
     1a0:	0c 94 7a 09 	jmp	0x12f4	; 0x12f4 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <Write_ADS1110_Config>:
#include "ads1110.h"


void Write_ADS1110_Config(unsigned char addr, ads1110_datarate dr, ads1110__gain gain){
     1a8:	cf 93       	push	r28
     1aa:	df 93       	push	r29
     1ac:	d8 2f       	mov	r29, r24
	
	unsigned char config = gain | dr | ADS1110_MODE_CONTINUOUS | BIT_5 | BIT_6 | RDY ;
     1ae:	60 68       	ori	r22, 0x80	; 128
     1b0:	c6 2f       	mov	r28, r22
     1b2:	c4 2b       	or	r28, r20
	
	I2C_StartCondition();				//Отправим условие START
     1b4:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_StartCondition>
	I2C_SendByte((addr<<1)+0);			//адресс с битом записи
     1b8:	8d 2f       	mov	r24, r29
     1ba:	88 0f       	add	r24, r24
     1bc:	0e 94 12 01 	call	0x224	; 0x224 <I2C_SendByte>
	I2C_SendByte(config);
     1c0:	8c 2f       	mov	r24, r28
     1c2:	0e 94 12 01 	call	0x224	; 0x224 <I2C_SendByte>
	I2C_StopCondition();
     1c6:	0e 94 0e 01 	call	0x21c	; 0x21c <I2C_StopCondition>
}
     1ca:	df 91       	pop	r29
     1cc:	cf 91       	pop	r28
     1ce:	08 95       	ret

000001d0 <Get_ADS1110_Data>:
/******************************************************************************/
unsigned int Get_ADS1110_Data(unsigned char addr){
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	c8 2f       	mov	r28, r24
	
	unsigned char byte1, byte2, byte3;
	unsigned int data_adc;
	unsigned char r_config;
	
	I2C_StartCondition();				//Отправим условие START
     1d6:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_StartCondition>
	I2C_SendByte((addr<<1)+1);			//отправим в устройство бит чтения
     1da:	8c 2f       	mov	r24, r28
     1dc:	88 0f       	add	r24, r24
     1de:	8f 5f       	subi	r24, 0xFF	; 255
     1e0:	0e 94 12 01 	call	0x224	; 0x224 <I2C_SendByte>
	byte1 = I2C_ReadByte();				//MSB
     1e4:	0e 94 1d 01 	call	0x23a	; 0x23a <I2C_ReadByte>
     1e8:	d8 2f       	mov	r29, r24
	byte2 = I2C_ReadByte();				//LSB
     1ea:	0e 94 1d 01 	call	0x23a	; 0x23a <I2C_ReadByte>
     1ee:	c8 2f       	mov	r28, r24
	byte3 = I2C_ReadLastByte();			//Config
     1f0:	0e 94 28 01 	call	0x250	; 0x250 <I2C_ReadLastByte>
	I2C_StopCondition();
     1f4:	0e 94 0e 01 	call	0x21c	; 0x21c <I2C_StopCondition>
	
	data_adc = (byte1<<8)|byte2;
	r_config = byte3;
	
	return data_adc;
     1f8:	8c 2f       	mov	r24, r28
     1fa:	90 e0       	ldi	r25, 0x00	; 0
	
	}
     1fc:	9d 2b       	or	r25, r29
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <I2C_Init>:
{
	I2C_StartCondition(); // Отправим условие START
	I2C_SendByte(addr); // Отправим в шину адрес устройства + бит чтения-записи
	I2C_SendByte(c);// Отправим байт данных
	I2C_StopCondition();// Отправим условие STOP
}
     204:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     208:	08 95       	ret

0000020a <I2C_StartCondition>:
     20a:	84 ea       	ldi	r24, 0xA4	; 164
     20c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     210:	ec eb       	ldi	r30, 0xBC	; 188
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	80 81       	ld	r24, Z
     216:	88 23       	and	r24, r24
     218:	ec f7       	brge	.-6      	; 0x214 <I2C_StartCondition+0xa>
     21a:	08 95       	ret

0000021c <I2C_StopCondition>:
     21c:	84 e9       	ldi	r24, 0x94	; 148
     21e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     222:	08 95       	ret

00000224 <I2C_SendByte>:
     224:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     228:	84 e8       	ldi	r24, 0x84	; 132
     22a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     22e:	ec eb       	ldi	r30, 0xBC	; 188
     230:	f0 e0       	ldi	r31, 0x00	; 0
     232:	80 81       	ld	r24, Z
     234:	88 23       	and	r24, r24
     236:	ec f7       	brge	.-6      	; 0x232 <I2C_SendByte+0xe>
     238:	08 95       	ret

0000023a <I2C_ReadByte>:

unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     23a:	84 ec       	ldi	r24, 0xC4	; 196
     23c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
     240:	ec eb       	ldi	r30, 0xBC	; 188
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	80 81       	ld	r24, Z
     246:	88 23       	and	r24, r24
     248:	ec f7       	brge	.-6      	; 0x244 <I2C_ReadByte+0xa>
	return TWDR;//читаем регистр данных
     24a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     24e:	08 95       	ret

00000250 <I2C_ReadLastByte>:

unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
     250:	84 e8       	ldi	r24, 0x84	; 132
     252:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
     256:	ec eb       	ldi	r30, 0xBC	; 188
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	80 81       	ld	r24, Z
     25c:	88 23       	and	r24, r24
     25e:	ec f7       	brge	.-6      	; 0x25a <I2C_ReadLastByte+0xa>
	return TWDR;//читаем регистр данных
     260:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     264:	08 95       	ret

00000266 <port_lcd>:
#include "lcd.h"

//----------------------------------------
void port_lcd(void){
	
	PORTD = 0x00;
     266:	1b b8       	out	0x0b, r1	; 11
	DDRD = 0xFC;	//0b11111100
     268:	8c ef       	ldi	r24, 0xFC	; 252
     26a:	8a b9       	out	0x0a, r24	; 10
     26c:	08 95       	ret

0000026e <sendhalfbyte>:
}
//----------------------------------------
void sendhalfbyte(unsigned char c)
{
	c<<=4;
	e1; //включаем линию Е
     26e:	5b 9a       	sbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     270:	e7 ec       	ldi	r30, 0xC7	; 199
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	31 97       	sbiw	r30, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <sendhalfbyte+0x6>
     278:	00 c0       	rjmp	.+0      	; 0x27a <sendhalfbyte+0xc>
     27a:	00 00       	nop
	_delay_us(50);
	PORTD&=0b00001111; //стираем информацию на входах DB4-DB7, остальное не трогаем
     27c:	9b b1       	in	r25, 0x0b	; 11
     27e:	9f 70       	andi	r25, 0x0F	; 15
     280:	9b b9       	out	0x0b, r25	; 11
	PORTD|=c;
     282:	9b b1       	in	r25, 0x0b	; 11
     284:	82 95       	swap	r24
     286:	80 7f       	andi	r24, 0xF0	; 240
     288:	89 2b       	or	r24, r25
     28a:	8b b9       	out	0x0b, r24	; 11
	e0; //выключаем линию Е
     28c:	5b 98       	cbi	0x0b, 3	; 11
     28e:	87 ec       	ldi	r24, 0xC7	; 199
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <sendhalfbyte+0x24>
     296:	00 c0       	rjmp	.+0      	; 0x298 <sendhalfbyte+0x2a>
     298:	00 00       	nop
     29a:	08 95       	ret

0000029c <sendbyte>:
	_delay_us(50);
}
//----------------------------------------
void sendbyte(unsigned char c, unsigned char mode)
{
     29c:	cf 93       	push	r28
     29e:	c8 2f       	mov	r28, r24
	if (mode==0) rs0;
     2a0:	61 11       	cpse	r22, r1
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <sendbyte+0xc>
     2a4:	5a 98       	cbi	0x0b, 2	; 11
     2a6:	01 c0       	rjmp	.+2      	; 0x2aa <sendbyte+0xe>
	else         rs1;
     2a8:	5a 9a       	sbi	0x0b, 2	; 11
	unsigned char hc=0;
	hc=c>>4;
	sendhalfbyte(hc); sendhalfbyte(c);
     2aa:	8c 2f       	mov	r24, r28
     2ac:	82 95       	swap	r24
     2ae:	8f 70       	andi	r24, 0x0F	; 15
     2b0:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
     2b4:	8c 2f       	mov	r24, r28
     2b6:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
}
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <sendchar>:
//----------------------------------------
void sendchar(unsigned char c)
{
	sendbyte(c,1);
     2be:	61 e0       	ldi	r22, 0x01	; 1
     2c0:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     2c4:	08 95       	ret

000002c6 <setpos>:
//----------------------------------------
void setpos(unsigned char x, unsigned y)
{
	char adress;
	adress=(0x40*y+x)|0b10000000;
	sendbyte(adress, 0);
     2c6:	90 e4       	ldi	r25, 0x40	; 64
     2c8:	69 9f       	mul	r22, r25
     2ca:	80 0d       	add	r24, r0
     2cc:	11 24       	eor	r1, r1
     2ce:	60 e0       	ldi	r22, 0x00	; 0
     2d0:	80 68       	ori	r24, 0x80	; 128
     2d2:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     2d6:	08 95       	ret

000002d8 <clearlcd>:
	
}
//----------------------------------------
void clearlcd(void)
{
	sendbyte(0b00000001, 0);
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     2e0:	8f e3       	ldi	r24, 0x3F	; 63
     2e2:	9f e1       	ldi	r25, 0x1F	; 31
     2e4:	01 97       	sbiw	r24, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <clearlcd+0xc>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <clearlcd+0x12>
     2ea:	00 00       	nop
     2ec:	08 95       	ret

000002ee <LCD_Init>:
	sendbyte(adress, 0);
}
//----------------------------------------
void LCD_Init(void)
{
	port_lcd();
     2ee:	0e 94 33 01 	call	0x266	; 0x266 <port_lcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f2:	8f e5       	ldi	r24, 0x5F	; 95
     2f4:	9a ee       	ldi	r25, 0xEA	; 234
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <LCD_Init+0x8>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <LCD_Init+0xe>
     2fc:	00 00       	nop
	_delay_ms(15); //Ждем 15 мс (стр 45)
	sendhalfbyte(0b00000011);
     2fe:	83 e0       	ldi	r24, 0x03	; 3
     300:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
     304:	8f e7       	ldi	r24, 0x7F	; 127
     306:	9e e3       	ldi	r25, 0x3E	; 62
     308:	01 97       	sbiw	r24, 0x01	; 1
     30a:	f1 f7       	brne	.-4      	; 0x308 <LCD_Init+0x1a>
     30c:	00 c0       	rjmp	.+0      	; 0x30e <LCD_Init+0x20>
     30e:	00 00       	nop
	_delay_ms(4);
	sendhalfbyte(0b00000011);
     310:	83 e0       	ldi	r24, 0x03	; 3
     312:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     316:	8f e8       	ldi	r24, 0x8F	; 143
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_Init+0x2c>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_Init+0x32>
     320:	00 00       	nop
	_delay_us(100);
	sendhalfbyte(0b00000011);
     322:	83 e0       	ldi	r24, 0x03	; 3
     324:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     328:	8f e9       	ldi	r24, 0x9F	; 159
     32a:	9f e0       	ldi	r25, 0x0F	; 15
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <LCD_Init+0x3e>
     330:	00 c0       	rjmp	.+0      	; 0x332 <LCD_Init+0x44>
     332:	00 00       	nop
	_delay_ms(1);
	sendhalfbyte(0b00000010);
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	0e 94 37 01 	call	0x26e	; 0x26e <sendhalfbyte>
     33a:	8f e9       	ldi	r24, 0x9F	; 159
     33c:	9f e0       	ldi	r25, 0x0F	; 15
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	f1 f7       	brne	.-4      	; 0x33e <LCD_Init+0x50>
     342:	00 c0       	rjmp	.+0      	; 0x344 <LCD_Init+0x56>
     344:	00 00       	nop
	_delay_ms(1);
	sendbyte(0b00101000, 0); //4бит-режим (DL=0) и 2 линии (N=1)
     346:	60 e0       	ldi	r22, 0x00	; 0
     348:	88 e2       	ldi	r24, 0x28	; 40
     34a:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     34e:	8f e9       	ldi	r24, 0x9F	; 159
     350:	9f e0       	ldi	r25, 0x0F	; 15
     352:	01 97       	sbiw	r24, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <LCD_Init+0x64>
     356:	00 c0       	rjmp	.+0      	; 0x358 <LCD_Init+0x6a>
     358:	00 00       	nop
	_delay_ms(1);
	sendbyte(0b00001100, 0); //включаем изображение на дисплее (D=1), курсоры никакие не включаем (C=0, B=0)
     35a:	60 e0       	ldi	r22, 0x00	; 0
     35c:	8c e0       	ldi	r24, 0x0C	; 12
     35e:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     362:	8f e9       	ldi	r24, 0x9F	; 159
     364:	9f e0       	ldi	r25, 0x0F	; 15
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <LCD_Init+0x78>
     36a:	00 c0       	rjmp	.+0      	; 0x36c <LCD_Init+0x7e>
     36c:	00 00       	nop
	_delay_ms(1);
	sendbyte(0b00000110, 0); //курсор (хоть он у нас и невидимый) будет двигаться влево
     36e:	60 e0       	ldi	r22, 0x00	; 0
     370:	86 e0       	ldi	r24, 0x06	; 6
     372:	0e 94 4e 01 	call	0x29c	; 0x29c <sendbyte>
     376:	8f e9       	ldi	r24, 0x9F	; 159
     378:	9f e0       	ldi	r25, 0x0F	; 15
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <LCD_Init+0x8c>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <LCD_Init+0x92>
     380:	00 00       	nop
	_delay_ms(1);
	
	clearlcd();
     382:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <clearlcd>
     386:	08 95       	ret

00000388 <str_lcd>:
	sendbyte(0b00000001, 0);
	_delay_us(2000);
}
//----------------------------------------
void str_lcd (char str1[])
{
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	ec 01       	movw	r28, r24
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     38e:	88 81       	ld	r24, Y
     390:	88 23       	and	r24, r24
     392:	31 f0       	breq	.+12     	; 0x3a0 <str_lcd+0x18>
     394:	21 96       	adiw	r28, 0x01	; 1
	sendchar(str1[n]);
     396:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
}
//----------------------------------------
void str_lcd (char str1[])
{
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     39a:	89 91       	ld	r24, Y+
     39c:	81 11       	cpse	r24, r1
     39e:	fb cf       	rjmp	.-10     	; 0x396 <str_lcd+0xe>
	sendchar(str1[n]);
}
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <__vector_11>:
unsigned int zero = 0;


ISR (TIMER1_COMPA_vect)

{
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	0f 92       	push	r0
     3ae:	11 24       	eor	r1, r1
     3b0:	ef 92       	push	r14
     3b2:	ff 92       	push	r15
     3b4:	1f 93       	push	r17
     3b6:	2f 93       	push	r18
     3b8:	3f 93       	push	r19
     3ba:	4f 93       	push	r20
     3bc:	5f 93       	push	r21
     3be:	6f 93       	push	r22
     3c0:	7f 93       	push	r23
     3c2:	8f 93       	push	r24
     3c4:	9f 93       	push	r25
     3c6:	af 93       	push	r26
     3c8:	bf 93       	push	r27
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	ef 93       	push	r30
     3d0:	ff 93       	push	r31
	data =  Get_ADS1110_Data(0x48);
     3d2:	88 e4       	ldi	r24, 0x48	; 72
     3d4:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <Get_ADS1110_Data>
     3d8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <data+0x1>
     3dc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <data>
	weight = data;
	weight -= zero;
	weight /= 35;
     3e0:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
     3e4:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
     3e8:	ac 01       	movw	r20, r24
     3ea:	42 1b       	sub	r20, r18
     3ec:	53 0b       	sbc	r21, r19
     3ee:	9a 01       	movw	r18, r20
     3f0:	af e0       	ldi	r26, 0x0F	; 15
     3f2:	ba ee       	ldi	r27, 0xEA	; 234
     3f4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     3f8:	96 95       	lsr	r25
     3fa:	87 95       	ror	r24
     3fc:	92 95       	swap	r25
     3fe:	82 95       	swap	r24
     400:	8f 70       	andi	r24, 0x0F	; 15
     402:	89 27       	eor	r24, r25
     404:	9f 70       	andi	r25, 0x0F	; 15
     406:	89 27       	eor	r24, r25
     408:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <weight+0x1>
     40c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <weight>
	
	
	setpos(0, 1);
     410:	61 e0       	ldi	r22, 0x01	; 1
     412:	70 e0       	ldi	r23, 0x00	; 0
     414:	80 e0       	ldi	r24, 0x00	; 0
     416:	0e 94 63 01 	call	0x2c6	; 0x2c6 <setpos>
	sendchar(data/10000+0x30);         //Преобразуем число в код числа
     41a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <data>
     41e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <data+0x1>
     422:	32 95       	swap	r19
     424:	22 95       	swap	r18
     426:	2f 70       	andi	r18, 0x0F	; 15
     428:	23 27       	eor	r18, r19
     42a:	3f 70       	andi	r19, 0x0F	; 15
     42c:	23 27       	eor	r18, r19
     42e:	a7 e4       	ldi	r26, 0x47	; 71
     430:	b3 e0       	ldi	r27, 0x03	; 3
     432:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     436:	96 95       	lsr	r25
     438:	87 95       	ror	r24
     43a:	96 95       	lsr	r25
     43c:	87 95       	ror	r24
     43e:	96 95       	lsr	r25
     440:	87 95       	ror	r24
     442:	80 5d       	subi	r24, 0xD0	; 208
     444:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((data%10000)/1000+0x30);  //Преобразуем число в код числа
     448:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <data>
     44c:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <data+0x1>
     450:	9a 01       	movw	r18, r20
     452:	32 95       	swap	r19
     454:	22 95       	swap	r18
     456:	2f 70       	andi	r18, 0x0F	; 15
     458:	23 27       	eor	r18, r19
     45a:	3f 70       	andi	r19, 0x0F	; 15
     45c:	23 27       	eor	r18, r19
     45e:	a7 e4       	ldi	r26, 0x47	; 71
     460:	b3 e0       	ldi	r27, 0x03	; 3
     462:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     466:	96 95       	lsr	r25
     468:	87 95       	ror	r24
     46a:	96 95       	lsr	r25
     46c:	87 95       	ror	r24
     46e:	96 95       	lsr	r25
     470:	87 95       	ror	r24
     472:	0f 2e       	mov	r0, r31
     474:	f0 e1       	ldi	r31, 0x10	; 16
     476:	ef 2e       	mov	r14, r31
     478:	f7 e2       	ldi	r31, 0x27	; 39
     47a:	ff 2e       	mov	r15, r31
     47c:	f0 2d       	mov	r31, r0
     47e:	8e 9d       	mul	r24, r14
     480:	90 01       	movw	r18, r0
     482:	8f 9d       	mul	r24, r15
     484:	30 0d       	add	r19, r0
     486:	9e 9d       	mul	r25, r14
     488:	30 0d       	add	r19, r0
     48a:	11 24       	eor	r1, r1
     48c:	ca 01       	movw	r24, r20
     48e:	82 1b       	sub	r24, r18
     490:	93 0b       	sbc	r25, r19
     492:	9c 01       	movw	r18, r24
     494:	36 95       	lsr	r19
     496:	27 95       	ror	r18
     498:	36 95       	lsr	r19
     49a:	27 95       	ror	r18
     49c:	36 95       	lsr	r19
     49e:	27 95       	ror	r18
     4a0:	a5 ec       	ldi	r26, 0xC5	; 197
     4a2:	b0 e2       	ldi	r27, 0x20	; 32
     4a4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     4a8:	92 95       	swap	r25
     4aa:	82 95       	swap	r24
     4ac:	8f 70       	andi	r24, 0x0F	; 15
     4ae:	89 27       	eor	r24, r25
     4b0:	9f 70       	andi	r25, 0x0F	; 15
     4b2:	89 27       	eor	r24, r25
     4b4:	80 5d       	subi	r24, 0xD0	; 208
     4b6:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((data%1000)/100+0x30);    //Преобразуем число в код числа
     4ba:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <data>
     4be:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <data+0x1>
     4c2:	9a 01       	movw	r18, r20
     4c4:	36 95       	lsr	r19
     4c6:	27 95       	ror	r18
     4c8:	36 95       	lsr	r19
     4ca:	27 95       	ror	r18
     4cc:	36 95       	lsr	r19
     4ce:	27 95       	ror	r18
     4d0:	a5 ec       	ldi	r26, 0xC5	; 197
     4d2:	b0 e2       	ldi	r27, 0x20	; 32
     4d4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     4d8:	92 95       	swap	r25
     4da:	82 95       	swap	r24
     4dc:	8f 70       	andi	r24, 0x0F	; 15
     4de:	89 27       	eor	r24, r25
     4e0:	9f 70       	andi	r25, 0x0F	; 15
     4e2:	89 27       	eor	r24, r25
     4e4:	c8 ee       	ldi	r28, 0xE8	; 232
     4e6:	d3 e0       	ldi	r29, 0x03	; 3
     4e8:	8c 9f       	mul	r24, r28
     4ea:	90 01       	movw	r18, r0
     4ec:	8d 9f       	mul	r24, r29
     4ee:	30 0d       	add	r19, r0
     4f0:	9c 9f       	mul	r25, r28
     4f2:	30 0d       	add	r19, r0
     4f4:	11 24       	eor	r1, r1
     4f6:	ca 01       	movw	r24, r20
     4f8:	82 1b       	sub	r24, r18
     4fa:	93 0b       	sbc	r25, r19
     4fc:	9c 01       	movw	r18, r24
     4fe:	36 95       	lsr	r19
     500:	27 95       	ror	r18
     502:	36 95       	lsr	r19
     504:	27 95       	ror	r18
     506:	ab e7       	ldi	r26, 0x7B	; 123
     508:	b4 e1       	ldi	r27, 0x14	; 20
     50a:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     50e:	96 95       	lsr	r25
     510:	87 95       	ror	r24
     512:	80 5d       	subi	r24, 0xD0	; 208
     514:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((data%100)/10+0x30);      //Преобразуем число в код числа
     518:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <data>
     51c:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <data+0x1>
     520:	9a 01       	movw	r18, r20
     522:	36 95       	lsr	r19
     524:	27 95       	ror	r18
     526:	36 95       	lsr	r19
     528:	27 95       	ror	r18
     52a:	ab e7       	ldi	r26, 0x7B	; 123
     52c:	b4 e1       	ldi	r27, 0x14	; 20
     52e:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     532:	96 95       	lsr	r25
     534:	87 95       	ror	r24
     536:	14 e6       	ldi	r17, 0x64	; 100
     538:	18 9f       	mul	r17, r24
     53a:	90 01       	movw	r18, r0
     53c:	19 9f       	mul	r17, r25
     53e:	30 0d       	add	r19, r0
     540:	11 24       	eor	r1, r1
     542:	ca 01       	movw	r24, r20
     544:	82 1b       	sub	r24, r18
     546:	93 0b       	sbc	r25, r19
     548:	9c 01       	movw	r18, r24
     54a:	ad ec       	ldi	r26, 0xCD	; 205
     54c:	bc ec       	ldi	r27, 0xCC	; 204
     54e:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     552:	96 95       	lsr	r25
     554:	87 95       	ror	r24
     556:	96 95       	lsr	r25
     558:	87 95       	ror	r24
     55a:	96 95       	lsr	r25
     55c:	87 95       	ror	r24
     55e:	80 5d       	subi	r24, 0xD0	; 208
     560:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar(data%10+0x30);            //Преобразуем число в код числа
     564:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <data>
     568:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <data+0x1>
     56c:	9a 01       	movw	r18, r20
     56e:	ad ec       	ldi	r26, 0xCD	; 205
     570:	bc ec       	ldi	r27, 0xCC	; 204
     572:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     576:	96 95       	lsr	r25
     578:	87 95       	ror	r24
     57a:	96 95       	lsr	r25
     57c:	87 95       	ror	r24
     57e:	96 95       	lsr	r25
     580:	87 95       	ror	r24
     582:	9c 01       	movw	r18, r24
     584:	22 0f       	add	r18, r18
     586:	33 1f       	adc	r19, r19
     588:	88 0f       	add	r24, r24
     58a:	99 1f       	adc	r25, r25
     58c:	88 0f       	add	r24, r24
     58e:	99 1f       	adc	r25, r25
     590:	88 0f       	add	r24, r24
     592:	99 1f       	adc	r25, r25
     594:	82 0f       	add	r24, r18
     596:	93 1f       	adc	r25, r19
     598:	9a 01       	movw	r18, r20
     59a:	28 1b       	sub	r18, r24
     59c:	39 0b       	sbc	r19, r25
     59e:	c9 01       	movw	r24, r18
     5a0:	80 5d       	subi	r24, 0xD0	; 208
     5a2:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	str_lcd ("  ");
     5a6:	80 e0       	ldi	r24, 0x00	; 0
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	0e 94 c4 01 	call	0x388	; 0x388 <str_lcd>
	sendchar(weight/10000+0x30);         //Преобразуем число в код числа
     5ae:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <weight>
     5b2:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <weight+0x1>
     5b6:	32 95       	swap	r19
     5b8:	22 95       	swap	r18
     5ba:	2f 70       	andi	r18, 0x0F	; 15
     5bc:	23 27       	eor	r18, r19
     5be:	3f 70       	andi	r19, 0x0F	; 15
     5c0:	23 27       	eor	r18, r19
     5c2:	a7 e4       	ldi	r26, 0x47	; 71
     5c4:	b3 e0       	ldi	r27, 0x03	; 3
     5c6:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     5ca:	96 95       	lsr	r25
     5cc:	87 95       	ror	r24
     5ce:	96 95       	lsr	r25
     5d0:	87 95       	ror	r24
     5d2:	96 95       	lsr	r25
     5d4:	87 95       	ror	r24
     5d6:	80 5d       	subi	r24, 0xD0	; 208
     5d8:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((weight%10000)/1000+0x30);  //Преобразуем число в код числа
     5dc:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <weight>
     5e0:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <weight+0x1>
     5e4:	9a 01       	movw	r18, r20
     5e6:	32 95       	swap	r19
     5e8:	22 95       	swap	r18
     5ea:	2f 70       	andi	r18, 0x0F	; 15
     5ec:	23 27       	eor	r18, r19
     5ee:	3f 70       	andi	r19, 0x0F	; 15
     5f0:	23 27       	eor	r18, r19
     5f2:	a7 e4       	ldi	r26, 0x47	; 71
     5f4:	b3 e0       	ldi	r27, 0x03	; 3
     5f6:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     5fa:	96 95       	lsr	r25
     5fc:	87 95       	ror	r24
     5fe:	96 95       	lsr	r25
     600:	87 95       	ror	r24
     602:	96 95       	lsr	r25
     604:	87 95       	ror	r24
     606:	8e 9d       	mul	r24, r14
     608:	90 01       	movw	r18, r0
     60a:	8f 9d       	mul	r24, r15
     60c:	30 0d       	add	r19, r0
     60e:	9e 9d       	mul	r25, r14
     610:	30 0d       	add	r19, r0
     612:	11 24       	eor	r1, r1
     614:	ca 01       	movw	r24, r20
     616:	82 1b       	sub	r24, r18
     618:	93 0b       	sbc	r25, r19
     61a:	9c 01       	movw	r18, r24
     61c:	36 95       	lsr	r19
     61e:	27 95       	ror	r18
     620:	36 95       	lsr	r19
     622:	27 95       	ror	r18
     624:	36 95       	lsr	r19
     626:	27 95       	ror	r18
     628:	a5 ec       	ldi	r26, 0xC5	; 197
     62a:	b0 e2       	ldi	r27, 0x20	; 32
     62c:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     630:	92 95       	swap	r25
     632:	82 95       	swap	r24
     634:	8f 70       	andi	r24, 0x0F	; 15
     636:	89 27       	eor	r24, r25
     638:	9f 70       	andi	r25, 0x0F	; 15
     63a:	89 27       	eor	r24, r25
     63c:	80 5d       	subi	r24, 0xD0	; 208
     63e:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((weight%1000)/100+0x30);    //Преобразуем число в код числа
     642:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <weight>
     646:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <weight+0x1>
     64a:	9a 01       	movw	r18, r20
     64c:	36 95       	lsr	r19
     64e:	27 95       	ror	r18
     650:	36 95       	lsr	r19
     652:	27 95       	ror	r18
     654:	36 95       	lsr	r19
     656:	27 95       	ror	r18
     658:	a5 ec       	ldi	r26, 0xC5	; 197
     65a:	b0 e2       	ldi	r27, 0x20	; 32
     65c:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     660:	92 95       	swap	r25
     662:	82 95       	swap	r24
     664:	8f 70       	andi	r24, 0x0F	; 15
     666:	89 27       	eor	r24, r25
     668:	9f 70       	andi	r25, 0x0F	; 15
     66a:	89 27       	eor	r24, r25
     66c:	8c 9f       	mul	r24, r28
     66e:	90 01       	movw	r18, r0
     670:	8d 9f       	mul	r24, r29
     672:	30 0d       	add	r19, r0
     674:	9c 9f       	mul	r25, r28
     676:	30 0d       	add	r19, r0
     678:	11 24       	eor	r1, r1
     67a:	ca 01       	movw	r24, r20
     67c:	82 1b       	sub	r24, r18
     67e:	93 0b       	sbc	r25, r19
     680:	9c 01       	movw	r18, r24
     682:	36 95       	lsr	r19
     684:	27 95       	ror	r18
     686:	36 95       	lsr	r19
     688:	27 95       	ror	r18
     68a:	ab e7       	ldi	r26, 0x7B	; 123
     68c:	b4 e1       	ldi	r27, 0x14	; 20
     68e:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     692:	96 95       	lsr	r25
     694:	87 95       	ror	r24
     696:	80 5d       	subi	r24, 0xD0	; 208
     698:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar((weight%100)/10+0x30);      //Преобразуем число в код числа
     69c:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <weight>
     6a0:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <weight+0x1>
     6a4:	9a 01       	movw	r18, r20
     6a6:	36 95       	lsr	r19
     6a8:	27 95       	ror	r18
     6aa:	36 95       	lsr	r19
     6ac:	27 95       	ror	r18
     6ae:	ab e7       	ldi	r26, 0x7B	; 123
     6b0:	b4 e1       	ldi	r27, 0x14	; 20
     6b2:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     6b6:	96 95       	lsr	r25
     6b8:	87 95       	ror	r24
     6ba:	18 9f       	mul	r17, r24
     6bc:	90 01       	movw	r18, r0
     6be:	19 9f       	mul	r17, r25
     6c0:	30 0d       	add	r19, r0
     6c2:	11 24       	eor	r1, r1
     6c4:	ca 01       	movw	r24, r20
     6c6:	82 1b       	sub	r24, r18
     6c8:	93 0b       	sbc	r25, r19
     6ca:	9c 01       	movw	r18, r24
     6cc:	ad ec       	ldi	r26, 0xCD	; 205
     6ce:	bc ec       	ldi	r27, 0xCC	; 204
     6d0:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     6d4:	96 95       	lsr	r25
     6d6:	87 95       	ror	r24
     6d8:	96 95       	lsr	r25
     6da:	87 95       	ror	r24
     6dc:	96 95       	lsr	r25
     6de:	87 95       	ror	r24
     6e0:	80 5d       	subi	r24, 0xD0	; 208
     6e2:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	sendchar(weight%10+0x30);
     6e6:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <weight>
     6ea:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <weight+0x1>
     6ee:	9a 01       	movw	r18, r20
     6f0:	ad ec       	ldi	r26, 0xCD	; 205
     6f2:	bc ec       	ldi	r27, 0xCC	; 204
     6f4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     6f8:	96 95       	lsr	r25
     6fa:	87 95       	ror	r24
     6fc:	96 95       	lsr	r25
     6fe:	87 95       	ror	r24
     700:	96 95       	lsr	r25
     702:	87 95       	ror	r24
     704:	9c 01       	movw	r18, r24
     706:	22 0f       	add	r18, r18
     708:	33 1f       	adc	r19, r19
     70a:	88 0f       	add	r24, r24
     70c:	99 1f       	adc	r25, r25
     70e:	88 0f       	add	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	88 0f       	add	r24, r24
     714:	99 1f       	adc	r25, r25
     716:	82 0f       	add	r24, r18
     718:	93 1f       	adc	r25, r19
     71a:	9a 01       	movw	r18, r20
     71c:	28 1b       	sub	r18, r24
     71e:	39 0b       	sbc	r19, r25
     720:	c9 01       	movw	r24, r18
     722:	80 5d       	subi	r24, 0xD0	; 208
     724:	0e 94 5f 01 	call	0x2be	; 0x2be <sendchar>
	weight = 0;
     728:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <weight+0x1>
     72c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <weight>
	
}
     730:	ff 91       	pop	r31
     732:	ef 91       	pop	r30
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	bf 91       	pop	r27
     73a:	af 91       	pop	r26
     73c:	9f 91       	pop	r25
     73e:	8f 91       	pop	r24
     740:	7f 91       	pop	r23
     742:	6f 91       	pop	r22
     744:	5f 91       	pop	r21
     746:	4f 91       	pop	r20
     748:	3f 91       	pop	r19
     74a:	2f 91       	pop	r18
     74c:	1f 91       	pop	r17
     74e:	ff 90       	pop	r15
     750:	ef 90       	pop	r14
     752:	0f 90       	pop	r0
     754:	0f be       	out	0x3f, r0	; 63
     756:	0f 90       	pop	r0
     758:	1f 90       	pop	r1
     75a:	18 95       	reti

0000075c <main>:

int main(void)
{
	
	 LCD_Init();
     75c:	0e 94 77 01 	call	0x2ee	; 0x2ee <LCD_Init>
	 I2C_Init (0x0C); // F_CPU-16->400kHz speed i2C
     760:	8c e0       	ldi	r24, 0x0C	; 12
     762:	0e 94 02 01 	call	0x204	; 0x204 <I2C_Init>
	 
	 Write_ADS1110_Config(0x48, DATARATE_15SPS, PGA_GAIN_8);
     766:	43 e0       	ldi	r20, 0x03	; 3
     768:	6c e0       	ldi	r22, 0x0C	; 12
     76a:	88 e4       	ldi	r24, 0x48	; 72
     76c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <Write_ADS1110_Config>
	 
	 
	 zero += Get_ADS1110_Data(0x48);
     770:	88 e4       	ldi	r24, 0x48	; 72
     772:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <Get_ADS1110_Data>
     776:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
     77a:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
     77e:	82 0f       	add	r24, r18
     780:	93 1f       	adc	r25, r19
     782:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     786:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
	 zero += Get_ADS1110_Data(0x48);
     78a:	88 e4       	ldi	r24, 0x48	; 72
     78c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <Get_ADS1110_Data>
     790:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
     794:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
     798:	82 0f       	add	r24, r18
     79a:	93 1f       	adc	r25, r19
     79c:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     7a0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
	 zero += Get_ADS1110_Data(0x48);
     7a4:	88 e4       	ldi	r24, 0x48	; 72
     7a6:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <Get_ADS1110_Data>
	 zero /= 3;
     7aa:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
     7ae:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
     7b2:	28 0f       	add	r18, r24
     7b4:	39 1f       	adc	r19, r25
     7b6:	ab ea       	ldi	r26, 0xAB	; 171
     7b8:	ba ea       	ldi	r27, 0xAA	; 170
     7ba:	0e 94 ac 07 	call	0xf58	; 0xf58 <__umulhisi3>
     7be:	96 95       	lsr	r25
     7c0:	87 95       	ror	r24
     7c2:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     7c6:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
	 
	 
	 USART_init();
     7ca:	0e 94 0c 04 	call	0x818	; 0x818 <USART_init>
	 timer_ini();
     7ce:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <timer_ini>
	 
	 setpos(4, 0);
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	84 e0       	ldi	r24, 0x04	; 4
     7d8:	0e 94 63 01 	call	0x2c6	; 0x2c6 <setpos>
	 str_lcd ("ADS1110");
     7dc:	83 e0       	ldi	r24, 0x03	; 3
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	0e 94 c4 01 	call	0x388	; 0x388 <str_lcd>
	 
	 USART_putstring("ADS1110 Test\r\n");
     7e4:	8b e0       	ldi	r24, 0x0B	; 11
     7e6:	91 e0       	ldi	r25, 0x01	; 1
     7e8:	0e 94 20 04 	call	0x840	; 0x840 <USART_putstring>
	 
	 
	  
	  
	 sei();
     7ec:	78 94       	sei
     7ee:	ff cf       	rjmp	.-2      	; 0x7ee <main+0x92>

000007f0 <timer_ini>:

#include "tim.h"
/* F = 20Hz, 16000000/1024/20  OCR1A = 781   */
void timer_ini(void){

	TCCR1B |= (1<<WGM12);				// устанавливаем режим СТС (сброс по совпадению)
     7f0:	e1 e8       	ldi	r30, 0x81	; 129
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	80 81       	ld	r24, Z
     7f6:	88 60       	ori	r24, 0x08	; 8
     7f8:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);				//устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
     7fa:	af e6       	ldi	r26, 0x6F	; 111
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	8c 91       	ld	r24, X
     800:	82 60       	ori	r24, 0x02	; 2
     802:	8c 93       	st	X, r24
	OCR1AH = 0b00000011;				//записываем в регистр число для сравнения
     804:	83 e0       	ldi	r24, 0x03	; 3
     806:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	OCR1AL = 0b00001101;
     80a:	8d e0       	ldi	r24, 0x0D	; 13
     80c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCCR1B |= (1<<CS10)|(1<<CS12);		//установим делитель.
     810:	80 81       	ld	r24, Z
     812:	85 60       	ori	r24, 0x05	; 5
     814:	80 83       	st	Z, r24
     816:	08 95       	ret

00000818 <USART_init>:
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
     818:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     81c:	87 e6       	ldi	r24, 0x67	; 103
     81e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     822:	88 e1       	ldi	r24, 0x18	; 24
     824:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     828:	86 e0       	ldi	r24, 0x06	; 6
     82a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     82e:	08 95       	ret

00000830 <USART_send>:

void USART_send( unsigned char dataa){
	
	while(!(UCSR0A & (1<<UDRE0)));
     830:	e0 ec       	ldi	r30, 0xC0	; 192
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	90 81       	ld	r25, Z
     836:	95 ff       	sbrs	r25, 5
     838:	fd cf       	rjmp	.-6      	; 0x834 <USART_send+0x4>
	UDR0 = dataa;
     83a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     83e:	08 95       	ret

00000840 <USART_putstring>:
	
}

void USART_putstring(char* StringPtr){
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	ec 01       	movw	r28, r24
	
	while(*StringPtr != 0x00){
     846:	88 81       	ld	r24, Y
     848:	88 23       	and	r24, r24
     84a:	31 f0       	breq	.+12     	; 0x858 <USART_putstring+0x18>
     84c:	21 96       	adiw	r28, 0x01	; 1
		USART_send(*StringPtr);
     84e:	0e 94 18 04 	call	0x830	; 0x830 <USART_send>
	
}

void USART_putstring(char* StringPtr){
	
	while(*StringPtr != 0x00){
     852:	89 91       	ld	r24, Y+
     854:	81 11       	cpse	r24, r1
     856:	fb cf       	rjmp	.-10     	; 0x84e <USART_putstring+0xe>
		USART_send(*StringPtr);
	StringPtr++;}
	
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	08 95       	ret

0000085e <vfprintf>:
     85e:	a0 e1       	ldi	r26, 0x10	; 16
     860:	b0 e0       	ldi	r27, 0x00	; 0
     862:	e5 e3       	ldi	r30, 0x35	; 53
     864:	f4 e0       	ldi	r31, 0x04	; 4
     866:	0c 94 bb 07 	jmp	0xf76	; 0xf76 <__prologue_saves__>
     86a:	7c 01       	movw	r14, r24
     86c:	1b 01       	movw	r2, r22
     86e:	6a 01       	movw	r12, r20
     870:	fc 01       	movw	r30, r24
     872:	17 82       	std	Z+7, r1	; 0x07
     874:	16 82       	std	Z+6, r1	; 0x06
     876:	83 81       	ldd	r24, Z+3	; 0x03
     878:	81 ff       	sbrs	r24, 1
     87a:	44 c3       	rjmp	.+1672   	; 0xf04 <__stack+0x605>
     87c:	9e 01       	movw	r18, r28
     87e:	2f 5f       	subi	r18, 0xFF	; 255
     880:	3f 4f       	sbci	r19, 0xFF	; 255
     882:	39 01       	movw	r6, r18
     884:	f7 01       	movw	r30, r14
     886:	93 81       	ldd	r25, Z+3	; 0x03
     888:	f1 01       	movw	r30, r2
     88a:	93 fd       	sbrc	r25, 3
     88c:	85 91       	lpm	r24, Z+
     88e:	93 ff       	sbrs	r25, 3
     890:	81 91       	ld	r24, Z+
     892:	1f 01       	movw	r2, r30
     894:	88 23       	and	r24, r24
     896:	09 f4       	brne	.+2      	; 0x89a <vfprintf+0x3c>
     898:	31 c3       	rjmp	.+1634   	; 0xefc <__stack+0x5fd>
     89a:	85 32       	cpi	r24, 0x25	; 37
     89c:	39 f4       	brne	.+14     	; 0x8ac <vfprintf+0x4e>
     89e:	93 fd       	sbrc	r25, 3
     8a0:	85 91       	lpm	r24, Z+
     8a2:	93 ff       	sbrs	r25, 3
     8a4:	81 91       	ld	r24, Z+
     8a6:	1f 01       	movw	r2, r30
     8a8:	85 32       	cpi	r24, 0x25	; 37
     8aa:	39 f4       	brne	.+14     	; 0x8ba <vfprintf+0x5c>
     8ac:	b7 01       	movw	r22, r14
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     8b4:	56 01       	movw	r10, r12
     8b6:	65 01       	movw	r12, r10
     8b8:	e5 cf       	rjmp	.-54     	; 0x884 <vfprintf+0x26>
     8ba:	10 e0       	ldi	r17, 0x00	; 0
     8bc:	51 2c       	mov	r5, r1
     8be:	91 2c       	mov	r9, r1
     8c0:	ff e1       	ldi	r31, 0x1F	; 31
     8c2:	f9 15       	cp	r31, r9
     8c4:	d8 f0       	brcs	.+54     	; 0x8fc <vfprintf+0x9e>
     8c6:	8b 32       	cpi	r24, 0x2B	; 43
     8c8:	79 f0       	breq	.+30     	; 0x8e8 <vfprintf+0x8a>
     8ca:	38 f4       	brcc	.+14     	; 0x8da <vfprintf+0x7c>
     8cc:	80 32       	cpi	r24, 0x20	; 32
     8ce:	79 f0       	breq	.+30     	; 0x8ee <vfprintf+0x90>
     8d0:	83 32       	cpi	r24, 0x23	; 35
     8d2:	a1 f4       	brne	.+40     	; 0x8fc <vfprintf+0x9e>
     8d4:	f9 2d       	mov	r31, r9
     8d6:	f0 61       	ori	r31, 0x10	; 16
     8d8:	2e c0       	rjmp	.+92     	; 0x936 <__stack+0x37>
     8da:	8d 32       	cpi	r24, 0x2D	; 45
     8dc:	61 f0       	breq	.+24     	; 0x8f6 <vfprintf+0x98>
     8de:	80 33       	cpi	r24, 0x30	; 48
     8e0:	69 f4       	brne	.+26     	; 0x8fc <vfprintf+0x9e>
     8e2:	29 2d       	mov	r18, r9
     8e4:	21 60       	ori	r18, 0x01	; 1
     8e6:	2d c0       	rjmp	.+90     	; 0x942 <__stack+0x43>
     8e8:	39 2d       	mov	r19, r9
     8ea:	32 60       	ori	r19, 0x02	; 2
     8ec:	93 2e       	mov	r9, r19
     8ee:	89 2d       	mov	r24, r9
     8f0:	84 60       	ori	r24, 0x04	; 4
     8f2:	98 2e       	mov	r9, r24
     8f4:	2a c0       	rjmp	.+84     	; 0x94a <__stack+0x4b>
     8f6:	e9 2d       	mov	r30, r9
     8f8:	e8 60       	ori	r30, 0x08	; 8
     8fa:	15 c0       	rjmp	.+42     	; 0x926 <__stack+0x27>
     8fc:	97 fc       	sbrc	r9, 7
     8fe:	2d c0       	rjmp	.+90     	; 0x95a <__stack+0x5b>
     900:	20 ed       	ldi	r18, 0xD0	; 208
     902:	28 0f       	add	r18, r24
     904:	2a 30       	cpi	r18, 0x0A	; 10
     906:	88 f4       	brcc	.+34     	; 0x92a <__stack+0x2b>
     908:	96 fe       	sbrs	r9, 6
     90a:	06 c0       	rjmp	.+12     	; 0x918 <__stack+0x19>
     90c:	3a e0       	ldi	r19, 0x0A	; 10
     90e:	13 9f       	mul	r17, r19
     910:	20 0d       	add	r18, r0
     912:	11 24       	eor	r1, r1
     914:	12 2f       	mov	r17, r18
     916:	19 c0       	rjmp	.+50     	; 0x94a <__stack+0x4b>
     918:	8a e0       	ldi	r24, 0x0A	; 10
     91a:	58 9e       	mul	r5, r24
     91c:	20 0d       	add	r18, r0
     91e:	11 24       	eor	r1, r1
     920:	52 2e       	mov	r5, r18
     922:	e9 2d       	mov	r30, r9
     924:	e0 62       	ori	r30, 0x20	; 32
     926:	9e 2e       	mov	r9, r30
     928:	10 c0       	rjmp	.+32     	; 0x94a <__stack+0x4b>
     92a:	8e 32       	cpi	r24, 0x2E	; 46
     92c:	31 f4       	brne	.+12     	; 0x93a <__stack+0x3b>
     92e:	96 fc       	sbrc	r9, 6
     930:	e5 c2       	rjmp	.+1482   	; 0xefc <__stack+0x5fd>
     932:	f9 2d       	mov	r31, r9
     934:	f0 64       	ori	r31, 0x40	; 64
     936:	9f 2e       	mov	r9, r31
     938:	08 c0       	rjmp	.+16     	; 0x94a <__stack+0x4b>
     93a:	8c 36       	cpi	r24, 0x6C	; 108
     93c:	21 f4       	brne	.+8      	; 0x946 <__stack+0x47>
     93e:	29 2d       	mov	r18, r9
     940:	20 68       	ori	r18, 0x80	; 128
     942:	92 2e       	mov	r9, r18
     944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
     946:	88 36       	cpi	r24, 0x68	; 104
     948:	41 f4       	brne	.+16     	; 0x95a <__stack+0x5b>
     94a:	f1 01       	movw	r30, r2
     94c:	93 fd       	sbrc	r25, 3
     94e:	85 91       	lpm	r24, Z+
     950:	93 ff       	sbrs	r25, 3
     952:	81 91       	ld	r24, Z+
     954:	1f 01       	movw	r2, r30
     956:	81 11       	cpse	r24, r1
     958:	b3 cf       	rjmp	.-154    	; 0x8c0 <vfprintf+0x62>
     95a:	9b eb       	ldi	r25, 0xBB	; 187
     95c:	98 0f       	add	r25, r24
     95e:	93 30       	cpi	r25, 0x03	; 3
     960:	20 f4       	brcc	.+8      	; 0x96a <__stack+0x6b>
     962:	99 2d       	mov	r25, r9
     964:	90 61       	ori	r25, 0x10	; 16
     966:	80 5e       	subi	r24, 0xE0	; 224
     968:	07 c0       	rjmp	.+14     	; 0x978 <__stack+0x79>
     96a:	9b e9       	ldi	r25, 0x9B	; 155
     96c:	98 0f       	add	r25, r24
     96e:	93 30       	cpi	r25, 0x03	; 3
     970:	08 f0       	brcs	.+2      	; 0x974 <__stack+0x75>
     972:	66 c1       	rjmp	.+716    	; 0xc40 <__stack+0x341>
     974:	99 2d       	mov	r25, r9
     976:	9f 7e       	andi	r25, 0xEF	; 239
     978:	96 ff       	sbrs	r25, 6
     97a:	16 e0       	ldi	r17, 0x06	; 6
     97c:	9f 73       	andi	r25, 0x3F	; 63
     97e:	99 2e       	mov	r9, r25
     980:	85 36       	cpi	r24, 0x65	; 101
     982:	19 f4       	brne	.+6      	; 0x98a <__stack+0x8b>
     984:	90 64       	ori	r25, 0x40	; 64
     986:	99 2e       	mov	r9, r25
     988:	08 c0       	rjmp	.+16     	; 0x99a <__stack+0x9b>
     98a:	86 36       	cpi	r24, 0x66	; 102
     98c:	21 f4       	brne	.+8      	; 0x996 <__stack+0x97>
     98e:	39 2f       	mov	r19, r25
     990:	30 68       	ori	r19, 0x80	; 128
     992:	93 2e       	mov	r9, r19
     994:	02 c0       	rjmp	.+4      	; 0x99a <__stack+0x9b>
     996:	11 11       	cpse	r17, r1
     998:	11 50       	subi	r17, 0x01	; 1
     99a:	97 fe       	sbrs	r9, 7
     99c:	07 c0       	rjmp	.+14     	; 0x9ac <__stack+0xad>
     99e:	1c 33       	cpi	r17, 0x3C	; 60
     9a0:	50 f4       	brcc	.+20     	; 0x9b6 <__stack+0xb7>
     9a2:	44 24       	eor	r4, r4
     9a4:	43 94       	inc	r4
     9a6:	41 0e       	add	r4, r17
     9a8:	27 e0       	ldi	r18, 0x07	; 7
     9aa:	0b c0       	rjmp	.+22     	; 0x9c2 <__stack+0xc3>
     9ac:	18 30       	cpi	r17, 0x08	; 8
     9ae:	38 f0       	brcs	.+14     	; 0x9be <__stack+0xbf>
     9b0:	27 e0       	ldi	r18, 0x07	; 7
     9b2:	17 e0       	ldi	r17, 0x07	; 7
     9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <__stack+0xc1>
     9b6:	27 e0       	ldi	r18, 0x07	; 7
     9b8:	9c e3       	ldi	r25, 0x3C	; 60
     9ba:	49 2e       	mov	r4, r25
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__stack+0xc3>
     9be:	21 2f       	mov	r18, r17
     9c0:	41 2c       	mov	r4, r1
     9c2:	56 01       	movw	r10, r12
     9c4:	84 e0       	ldi	r24, 0x04	; 4
     9c6:	a8 0e       	add	r10, r24
     9c8:	b1 1c       	adc	r11, r1
     9ca:	f6 01       	movw	r30, r12
     9cc:	60 81       	ld	r22, Z
     9ce:	71 81       	ldd	r23, Z+1	; 0x01
     9d0:	82 81       	ldd	r24, Z+2	; 0x02
     9d2:	93 81       	ldd	r25, Z+3	; 0x03
     9d4:	04 2d       	mov	r16, r4
     9d6:	a3 01       	movw	r20, r6
     9d8:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <__ftoa_engine>
     9dc:	6c 01       	movw	r12, r24
     9de:	f9 81       	ldd	r31, Y+1	; 0x01
     9e0:	fc 87       	std	Y+12, r31	; 0x0c
     9e2:	f0 ff       	sbrs	r31, 0
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
     9e6:	f3 ff       	sbrs	r31, 3
     9e8:	06 c0       	rjmp	.+12     	; 0x9f6 <__stack+0xf7>
     9ea:	91 fc       	sbrc	r9, 1
     9ec:	06 c0       	rjmp	.+12     	; 0x9fa <__stack+0xfb>
     9ee:	92 fe       	sbrs	r9, 2
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <__stack+0xff>
     9f2:	00 e2       	ldi	r16, 0x20	; 32
     9f4:	05 c0       	rjmp	.+10     	; 0xa00 <__stack+0x101>
     9f6:	0d e2       	ldi	r16, 0x2D	; 45
     9f8:	03 c0       	rjmp	.+6      	; 0xa00 <__stack+0x101>
     9fa:	0b e2       	ldi	r16, 0x2B	; 43
     9fc:	01 c0       	rjmp	.+2      	; 0xa00 <__stack+0x101>
     9fe:	00 e0       	ldi	r16, 0x00	; 0
     a00:	8c 85       	ldd	r24, Y+12	; 0x0c
     a02:	8c 70       	andi	r24, 0x0C	; 12
     a04:	19 f0       	breq	.+6      	; 0xa0c <__stack+0x10d>
     a06:	01 11       	cpse	r16, r1
     a08:	5a c2       	rjmp	.+1204   	; 0xebe <__stack+0x5bf>
     a0a:	9b c2       	rjmp	.+1334   	; 0xf42 <__stack+0x643>
     a0c:	97 fe       	sbrs	r9, 7
     a0e:	10 c0       	rjmp	.+32     	; 0xa30 <__stack+0x131>
     a10:	4c 0c       	add	r4, r12
     a12:	fc 85       	ldd	r31, Y+12	; 0x0c
     a14:	f4 ff       	sbrs	r31, 4
     a16:	04 c0       	rjmp	.+8      	; 0xa20 <__stack+0x121>
     a18:	8a 81       	ldd	r24, Y+2	; 0x02
     a1a:	81 33       	cpi	r24, 0x31	; 49
     a1c:	09 f4       	brne	.+2      	; 0xa20 <__stack+0x121>
     a1e:	4a 94       	dec	r4
     a20:	14 14       	cp	r1, r4
     a22:	74 f5       	brge	.+92     	; 0xa80 <__stack+0x181>
     a24:	28 e0       	ldi	r18, 0x08	; 8
     a26:	24 15       	cp	r18, r4
     a28:	78 f5       	brcc	.+94     	; 0xa88 <__stack+0x189>
     a2a:	88 e0       	ldi	r24, 0x08	; 8
     a2c:	48 2e       	mov	r4, r24
     a2e:	2c c0       	rjmp	.+88     	; 0xa88 <__stack+0x189>
     a30:	96 fc       	sbrc	r9, 6
     a32:	2a c0       	rjmp	.+84     	; 0xa88 <__stack+0x189>
     a34:	81 2f       	mov	r24, r17
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	8c 15       	cp	r24, r12
     a3a:	9d 05       	cpc	r25, r13
     a3c:	9c f0       	brlt	.+38     	; 0xa64 <__stack+0x165>
     a3e:	3c ef       	ldi	r19, 0xFC	; 252
     a40:	c3 16       	cp	r12, r19
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	d3 06       	cpc	r13, r19
     a46:	74 f0       	brlt	.+28     	; 0xa64 <__stack+0x165>
     a48:	89 2d       	mov	r24, r9
     a4a:	80 68       	ori	r24, 0x80	; 128
     a4c:	98 2e       	mov	r9, r24
     a4e:	0a c0       	rjmp	.+20     	; 0xa64 <__stack+0x165>
     a50:	e2 e0       	ldi	r30, 0x02	; 2
     a52:	f0 e0       	ldi	r31, 0x00	; 0
     a54:	ec 0f       	add	r30, r28
     a56:	fd 1f       	adc	r31, r29
     a58:	e1 0f       	add	r30, r17
     a5a:	f1 1d       	adc	r31, r1
     a5c:	80 81       	ld	r24, Z
     a5e:	80 33       	cpi	r24, 0x30	; 48
     a60:	19 f4       	brne	.+6      	; 0xa68 <__stack+0x169>
     a62:	11 50       	subi	r17, 0x01	; 1
     a64:	11 11       	cpse	r17, r1
     a66:	f4 cf       	rjmp	.-24     	; 0xa50 <__stack+0x151>
     a68:	97 fe       	sbrs	r9, 7
     a6a:	0e c0       	rjmp	.+28     	; 0xa88 <__stack+0x189>
     a6c:	44 24       	eor	r4, r4
     a6e:	43 94       	inc	r4
     a70:	41 0e       	add	r4, r17
     a72:	81 2f       	mov	r24, r17
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	c8 16       	cp	r12, r24
     a78:	d9 06       	cpc	r13, r25
     a7a:	2c f4       	brge	.+10     	; 0xa86 <__stack+0x187>
     a7c:	1c 19       	sub	r17, r12
     a7e:	04 c0       	rjmp	.+8      	; 0xa88 <__stack+0x189>
     a80:	44 24       	eor	r4, r4
     a82:	43 94       	inc	r4
     a84:	01 c0       	rjmp	.+2      	; 0xa88 <__stack+0x189>
     a86:	10 e0       	ldi	r17, 0x00	; 0
     a88:	97 fe       	sbrs	r9, 7
     a8a:	06 c0       	rjmp	.+12     	; 0xa98 <__stack+0x199>
     a8c:	1c 14       	cp	r1, r12
     a8e:	1d 04       	cpc	r1, r13
     a90:	34 f4       	brge	.+12     	; 0xa9e <__stack+0x19f>
     a92:	c6 01       	movw	r24, r12
     a94:	01 96       	adiw	r24, 0x01	; 1
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <__stack+0x1a3>
     a98:	85 e0       	ldi	r24, 0x05	; 5
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <__stack+0x1a3>
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	01 11       	cpse	r16, r1
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	11 23       	and	r17, r17
     aa8:	31 f0       	breq	.+12     	; 0xab6 <__stack+0x1b7>
     aaa:	21 2f       	mov	r18, r17
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	2f 5f       	subi	r18, 0xFF	; 255
     ab0:	3f 4f       	sbci	r19, 0xFF	; 255
     ab2:	82 0f       	add	r24, r18
     ab4:	93 1f       	adc	r25, r19
     ab6:	25 2d       	mov	r18, r5
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	82 17       	cp	r24, r18
     abc:	93 07       	cpc	r25, r19
     abe:	14 f4       	brge	.+4      	; 0xac4 <__stack+0x1c5>
     ac0:	58 1a       	sub	r5, r24
     ac2:	01 c0       	rjmp	.+2      	; 0xac6 <__stack+0x1c7>
     ac4:	51 2c       	mov	r5, r1
     ac6:	89 2d       	mov	r24, r9
     ac8:	89 70       	andi	r24, 0x09	; 9
     aca:	49 f4       	brne	.+18     	; 0xade <__stack+0x1df>
     acc:	55 20       	and	r5, r5
     ace:	39 f0       	breq	.+14     	; 0xade <__stack+0x1df>
     ad0:	b7 01       	movw	r22, r14
     ad2:	80 e2       	ldi	r24, 0x20	; 32
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     ada:	5a 94       	dec	r5
     adc:	f7 cf       	rjmp	.-18     	; 0xacc <__stack+0x1cd>
     ade:	00 23       	and	r16, r16
     ae0:	29 f0       	breq	.+10     	; 0xaec <__stack+0x1ed>
     ae2:	b7 01       	movw	r22, r14
     ae4:	80 2f       	mov	r24, r16
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     aec:	93 fc       	sbrc	r9, 3
     aee:	09 c0       	rjmp	.+18     	; 0xb02 <__stack+0x203>
     af0:	55 20       	and	r5, r5
     af2:	39 f0       	breq	.+14     	; 0xb02 <__stack+0x203>
     af4:	b7 01       	movw	r22, r14
     af6:	80 e3       	ldi	r24, 0x30	; 48
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     afe:	5a 94       	dec	r5
     b00:	f7 cf       	rjmp	.-18     	; 0xaf0 <__stack+0x1f1>
     b02:	97 fe       	sbrs	r9, 7
     b04:	4c c0       	rjmp	.+152    	; 0xb9e <__stack+0x29f>
     b06:	46 01       	movw	r8, r12
     b08:	d7 fe       	sbrs	r13, 7
     b0a:	02 c0       	rjmp	.+4      	; 0xb10 <__stack+0x211>
     b0c:	81 2c       	mov	r8, r1
     b0e:	91 2c       	mov	r9, r1
     b10:	c6 01       	movw	r24, r12
     b12:	88 19       	sub	r24, r8
     b14:	99 09       	sbc	r25, r9
     b16:	f3 01       	movw	r30, r6
     b18:	e8 0f       	add	r30, r24
     b1a:	f9 1f       	adc	r31, r25
     b1c:	fe 87       	std	Y+14, r31	; 0x0e
     b1e:	ed 87       	std	Y+13, r30	; 0x0d
     b20:	96 01       	movw	r18, r12
     b22:	24 19       	sub	r18, r4
     b24:	31 09       	sbc	r19, r1
     b26:	38 8b       	std	Y+16, r19	; 0x10
     b28:	2f 87       	std	Y+15, r18	; 0x0f
     b2a:	01 2f       	mov	r16, r17
     b2c:	10 e0       	ldi	r17, 0x00	; 0
     b2e:	11 95       	neg	r17
     b30:	01 95       	neg	r16
     b32:	11 09       	sbc	r17, r1
     b34:	3f ef       	ldi	r19, 0xFF	; 255
     b36:	83 16       	cp	r8, r19
     b38:	93 06       	cpc	r9, r19
     b3a:	29 f4       	brne	.+10     	; 0xb46 <__stack+0x247>
     b3c:	b7 01       	movw	r22, r14
     b3e:	8e e2       	ldi	r24, 0x2E	; 46
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     b46:	c8 14       	cp	r12, r8
     b48:	d9 04       	cpc	r13, r9
     b4a:	4c f0       	brlt	.+18     	; 0xb5e <__stack+0x25f>
     b4c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b4e:	98 89       	ldd	r25, Y+16	; 0x10
     b50:	88 15       	cp	r24, r8
     b52:	99 05       	cpc	r25, r9
     b54:	24 f4       	brge	.+8      	; 0xb5e <__stack+0x25f>
     b56:	ed 85       	ldd	r30, Y+13	; 0x0d
     b58:	fe 85       	ldd	r31, Y+14	; 0x0e
     b5a:	81 81       	ldd	r24, Z+1	; 0x01
     b5c:	01 c0       	rjmp	.+2      	; 0xb60 <__stack+0x261>
     b5e:	80 e3       	ldi	r24, 0x30	; 48
     b60:	f1 e0       	ldi	r31, 0x01	; 1
     b62:	8f 1a       	sub	r8, r31
     b64:	91 08       	sbc	r9, r1
     b66:	2d 85       	ldd	r18, Y+13	; 0x0d
     b68:	3e 85       	ldd	r19, Y+14	; 0x0e
     b6a:	2f 5f       	subi	r18, 0xFF	; 255
     b6c:	3f 4f       	sbci	r19, 0xFF	; 255
     b6e:	3e 87       	std	Y+14, r19	; 0x0e
     b70:	2d 87       	std	Y+13, r18	; 0x0d
     b72:	80 16       	cp	r8, r16
     b74:	91 06       	cpc	r9, r17
     b76:	2c f0       	brlt	.+10     	; 0xb82 <__stack+0x283>
     b78:	b7 01       	movw	r22, r14
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     b80:	d9 cf       	rjmp	.-78     	; 0xb34 <__stack+0x235>
     b82:	c8 14       	cp	r12, r8
     b84:	d9 04       	cpc	r13, r9
     b86:	41 f4       	brne	.+16     	; 0xb98 <__stack+0x299>
     b88:	9a 81       	ldd	r25, Y+2	; 0x02
     b8a:	96 33       	cpi	r25, 0x36	; 54
     b8c:	20 f4       	brcc	.+8      	; 0xb96 <__stack+0x297>
     b8e:	95 33       	cpi	r25, 0x35	; 53
     b90:	19 f4       	brne	.+6      	; 0xb98 <__stack+0x299>
     b92:	3c 85       	ldd	r19, Y+12	; 0x0c
     b94:	34 ff       	sbrs	r19, 4
     b96:	81 e3       	ldi	r24, 0x31	; 49
     b98:	b7 01       	movw	r22, r14
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	4e c0       	rjmp	.+156    	; 0xc3a <__stack+0x33b>
     b9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ba0:	81 33       	cpi	r24, 0x31	; 49
     ba2:	19 f0       	breq	.+6      	; 0xbaa <__stack+0x2ab>
     ba4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ba6:	9f 7e       	andi	r25, 0xEF	; 239
     ba8:	9c 87       	std	Y+12, r25	; 0x0c
     baa:	b7 01       	movw	r22, r14
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     bb2:	11 11       	cpse	r17, r1
     bb4:	05 c0       	rjmp	.+10     	; 0xbc0 <__stack+0x2c1>
     bb6:	94 fc       	sbrc	r9, 4
     bb8:	18 c0       	rjmp	.+48     	; 0xbea <__stack+0x2eb>
     bba:	85 e6       	ldi	r24, 0x65	; 101
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	17 c0       	rjmp	.+46     	; 0xbee <__stack+0x2ef>
     bc0:	b7 01       	movw	r22, r14
     bc2:	8e e2       	ldi	r24, 0x2E	; 46
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     bca:	1e 5f       	subi	r17, 0xFE	; 254
     bcc:	82 e0       	ldi	r24, 0x02	; 2
     bce:	01 e0       	ldi	r16, 0x01	; 1
     bd0:	08 0f       	add	r16, r24
     bd2:	f3 01       	movw	r30, r6
     bd4:	e8 0f       	add	r30, r24
     bd6:	f1 1d       	adc	r31, r1
     bd8:	80 81       	ld	r24, Z
     bda:	b7 01       	movw	r22, r14
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     be2:	80 2f       	mov	r24, r16
     be4:	01 13       	cpse	r16, r17
     be6:	f3 cf       	rjmp	.-26     	; 0xbce <__stack+0x2cf>
     be8:	e6 cf       	rjmp	.-52     	; 0xbb6 <__stack+0x2b7>
     bea:	85 e4       	ldi	r24, 0x45	; 69
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	b7 01       	movw	r22, r14
     bf0:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     bf4:	d7 fc       	sbrc	r13, 7
     bf6:	06 c0       	rjmp	.+12     	; 0xc04 <__stack+0x305>
     bf8:	c1 14       	cp	r12, r1
     bfa:	d1 04       	cpc	r13, r1
     bfc:	41 f4       	brne	.+16     	; 0xc0e <__stack+0x30f>
     bfe:	ec 85       	ldd	r30, Y+12	; 0x0c
     c00:	e4 ff       	sbrs	r30, 4
     c02:	05 c0       	rjmp	.+10     	; 0xc0e <__stack+0x30f>
     c04:	d1 94       	neg	r13
     c06:	c1 94       	neg	r12
     c08:	d1 08       	sbc	r13, r1
     c0a:	8d e2       	ldi	r24, 0x2D	; 45
     c0c:	01 c0       	rjmp	.+2      	; 0xc10 <__stack+0x311>
     c0e:	8b e2       	ldi	r24, 0x2B	; 43
     c10:	b7 01       	movw	r22, r14
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     c18:	80 e3       	ldi	r24, 0x30	; 48
     c1a:	2a e0       	ldi	r18, 0x0A	; 10
     c1c:	c2 16       	cp	r12, r18
     c1e:	d1 04       	cpc	r13, r1
     c20:	2c f0       	brlt	.+10     	; 0xc2c <__stack+0x32d>
     c22:	8f 5f       	subi	r24, 0xFF	; 255
     c24:	fa e0       	ldi	r31, 0x0A	; 10
     c26:	cf 1a       	sub	r12, r31
     c28:	d1 08       	sbc	r13, r1
     c2a:	f7 cf       	rjmp	.-18     	; 0xc1a <__stack+0x31b>
     c2c:	b7 01       	movw	r22, r14
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     c34:	b7 01       	movw	r22, r14
     c36:	c6 01       	movw	r24, r12
     c38:	c0 96       	adiw	r24, 0x30	; 48
     c3a:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     c3e:	54 c1       	rjmp	.+680    	; 0xee8 <__stack+0x5e9>
     c40:	83 36       	cpi	r24, 0x63	; 99
     c42:	31 f0       	breq	.+12     	; 0xc50 <__stack+0x351>
     c44:	83 37       	cpi	r24, 0x73	; 115
     c46:	79 f0       	breq	.+30     	; 0xc66 <__stack+0x367>
     c48:	83 35       	cpi	r24, 0x53	; 83
     c4a:	09 f0       	breq	.+2      	; 0xc4e <__stack+0x34f>
     c4c:	56 c0       	rjmp	.+172    	; 0xcfa <__stack+0x3fb>
     c4e:	20 c0       	rjmp	.+64     	; 0xc90 <__stack+0x391>
     c50:	56 01       	movw	r10, r12
     c52:	32 e0       	ldi	r19, 0x02	; 2
     c54:	a3 0e       	add	r10, r19
     c56:	b1 1c       	adc	r11, r1
     c58:	f6 01       	movw	r30, r12
     c5a:	80 81       	ld	r24, Z
     c5c:	89 83       	std	Y+1, r24	; 0x01
     c5e:	01 e0       	ldi	r16, 0x01	; 1
     c60:	10 e0       	ldi	r17, 0x00	; 0
     c62:	63 01       	movw	r12, r6
     c64:	12 c0       	rjmp	.+36     	; 0xc8a <__stack+0x38b>
     c66:	56 01       	movw	r10, r12
     c68:	f2 e0       	ldi	r31, 0x02	; 2
     c6a:	af 0e       	add	r10, r31
     c6c:	b1 1c       	adc	r11, r1
     c6e:	f6 01       	movw	r30, r12
     c70:	c0 80       	ld	r12, Z
     c72:	d1 80       	ldd	r13, Z+1	; 0x01
     c74:	96 fe       	sbrs	r9, 6
     c76:	03 c0       	rjmp	.+6      	; 0xc7e <__stack+0x37f>
     c78:	61 2f       	mov	r22, r17
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <__stack+0x383>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	c6 01       	movw	r24, r12
     c84:	0e 94 d5 08 	call	0x11aa	; 0x11aa <strnlen>
     c88:	8c 01       	movw	r16, r24
     c8a:	f9 2d       	mov	r31, r9
     c8c:	ff 77       	andi	r31, 0x7F	; 127
     c8e:	14 c0       	rjmp	.+40     	; 0xcb8 <__stack+0x3b9>
     c90:	56 01       	movw	r10, r12
     c92:	22 e0       	ldi	r18, 0x02	; 2
     c94:	a2 0e       	add	r10, r18
     c96:	b1 1c       	adc	r11, r1
     c98:	f6 01       	movw	r30, r12
     c9a:	c0 80       	ld	r12, Z
     c9c:	d1 80       	ldd	r13, Z+1	; 0x01
     c9e:	96 fe       	sbrs	r9, 6
     ca0:	03 c0       	rjmp	.+6      	; 0xca8 <__stack+0x3a9>
     ca2:	61 2f       	mov	r22, r17
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <__stack+0x3ad>
     ca8:	6f ef       	ldi	r22, 0xFF	; 255
     caa:	7f ef       	ldi	r23, 0xFF	; 255
     cac:	c6 01       	movw	r24, r12
     cae:	0e 94 ca 08 	call	0x1194	; 0x1194 <strnlen_P>
     cb2:	8c 01       	movw	r16, r24
     cb4:	f9 2d       	mov	r31, r9
     cb6:	f0 68       	ori	r31, 0x80	; 128
     cb8:	9f 2e       	mov	r9, r31
     cba:	f3 fd       	sbrc	r31, 3
     cbc:	1a c0       	rjmp	.+52     	; 0xcf2 <__stack+0x3f3>
     cbe:	85 2d       	mov	r24, r5
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	08 17       	cp	r16, r24
     cc4:	19 07       	cpc	r17, r25
     cc6:	a8 f4       	brcc	.+42     	; 0xcf2 <__stack+0x3f3>
     cc8:	b7 01       	movw	r22, r14
     cca:	80 e2       	ldi	r24, 0x20	; 32
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     cd2:	5a 94       	dec	r5
     cd4:	f4 cf       	rjmp	.-24     	; 0xcbe <__stack+0x3bf>
     cd6:	f6 01       	movw	r30, r12
     cd8:	97 fc       	sbrc	r9, 7
     cda:	85 91       	lpm	r24, Z+
     cdc:	97 fe       	sbrs	r9, 7
     cde:	81 91       	ld	r24, Z+
     ce0:	6f 01       	movw	r12, r30
     ce2:	b7 01       	movw	r22, r14
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     cea:	51 10       	cpse	r5, r1
     cec:	5a 94       	dec	r5
     cee:	01 50       	subi	r16, 0x01	; 1
     cf0:	11 09       	sbc	r17, r1
     cf2:	01 15       	cp	r16, r1
     cf4:	11 05       	cpc	r17, r1
     cf6:	79 f7       	brne	.-34     	; 0xcd6 <__stack+0x3d7>
     cf8:	f7 c0       	rjmp	.+494    	; 0xee8 <__stack+0x5e9>
     cfa:	84 36       	cpi	r24, 0x64	; 100
     cfc:	11 f0       	breq	.+4      	; 0xd02 <__stack+0x403>
     cfe:	89 36       	cpi	r24, 0x69	; 105
     d00:	61 f5       	brne	.+88     	; 0xd5a <__stack+0x45b>
     d02:	56 01       	movw	r10, r12
     d04:	97 fe       	sbrs	r9, 7
     d06:	09 c0       	rjmp	.+18     	; 0xd1a <__stack+0x41b>
     d08:	24 e0       	ldi	r18, 0x04	; 4
     d0a:	a2 0e       	add	r10, r18
     d0c:	b1 1c       	adc	r11, r1
     d0e:	f6 01       	movw	r30, r12
     d10:	60 81       	ld	r22, Z
     d12:	71 81       	ldd	r23, Z+1	; 0x01
     d14:	82 81       	ldd	r24, Z+2	; 0x02
     d16:	93 81       	ldd	r25, Z+3	; 0x03
     d18:	0a c0       	rjmp	.+20     	; 0xd2e <__stack+0x42f>
     d1a:	f2 e0       	ldi	r31, 0x02	; 2
     d1c:	af 0e       	add	r10, r31
     d1e:	b1 1c       	adc	r11, r1
     d20:	f6 01       	movw	r30, r12
     d22:	60 81       	ld	r22, Z
     d24:	71 81       	ldd	r23, Z+1	; 0x01
     d26:	07 2e       	mov	r0, r23
     d28:	00 0c       	add	r0, r0
     d2a:	88 0b       	sbc	r24, r24
     d2c:	99 0b       	sbc	r25, r25
     d2e:	f9 2d       	mov	r31, r9
     d30:	ff 76       	andi	r31, 0x6F	; 111
     d32:	9f 2e       	mov	r9, r31
     d34:	97 ff       	sbrs	r25, 7
     d36:	09 c0       	rjmp	.+18     	; 0xd4a <__stack+0x44b>
     d38:	90 95       	com	r25
     d3a:	80 95       	com	r24
     d3c:	70 95       	com	r23
     d3e:	61 95       	neg	r22
     d40:	7f 4f       	sbci	r23, 0xFF	; 255
     d42:	8f 4f       	sbci	r24, 0xFF	; 255
     d44:	9f 4f       	sbci	r25, 0xFF	; 255
     d46:	f0 68       	ori	r31, 0x80	; 128
     d48:	9f 2e       	mov	r9, r31
     d4a:	2a e0       	ldi	r18, 0x0A	; 10
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	a3 01       	movw	r20, r6
     d50:	0e 94 1c 09 	call	0x1238	; 0x1238 <__ultoa_invert>
     d54:	c8 2e       	mov	r12, r24
     d56:	c6 18       	sub	r12, r6
     d58:	3f c0       	rjmp	.+126    	; 0xdd8 <__stack+0x4d9>
     d5a:	09 2d       	mov	r16, r9
     d5c:	85 37       	cpi	r24, 0x75	; 117
     d5e:	21 f4       	brne	.+8      	; 0xd68 <__stack+0x469>
     d60:	0f 7e       	andi	r16, 0xEF	; 239
     d62:	2a e0       	ldi	r18, 0x0A	; 10
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	1d c0       	rjmp	.+58     	; 0xda2 <__stack+0x4a3>
     d68:	09 7f       	andi	r16, 0xF9	; 249
     d6a:	8f 36       	cpi	r24, 0x6F	; 111
     d6c:	91 f0       	breq	.+36     	; 0xd92 <__stack+0x493>
     d6e:	18 f4       	brcc	.+6      	; 0xd76 <__stack+0x477>
     d70:	88 35       	cpi	r24, 0x58	; 88
     d72:	59 f0       	breq	.+22     	; 0xd8a <__stack+0x48b>
     d74:	c3 c0       	rjmp	.+390    	; 0xefc <__stack+0x5fd>
     d76:	80 37       	cpi	r24, 0x70	; 112
     d78:	19 f0       	breq	.+6      	; 0xd80 <__stack+0x481>
     d7a:	88 37       	cpi	r24, 0x78	; 120
     d7c:	11 f0       	breq	.+4      	; 0xd82 <__stack+0x483>
     d7e:	be c0       	rjmp	.+380    	; 0xefc <__stack+0x5fd>
     d80:	00 61       	ori	r16, 0x10	; 16
     d82:	04 ff       	sbrs	r16, 4
     d84:	09 c0       	rjmp	.+18     	; 0xd98 <__stack+0x499>
     d86:	04 60       	ori	r16, 0x04	; 4
     d88:	07 c0       	rjmp	.+14     	; 0xd98 <__stack+0x499>
     d8a:	94 fe       	sbrs	r9, 4
     d8c:	08 c0       	rjmp	.+16     	; 0xd9e <__stack+0x49f>
     d8e:	06 60       	ori	r16, 0x06	; 6
     d90:	06 c0       	rjmp	.+12     	; 0xd9e <__stack+0x49f>
     d92:	28 e0       	ldi	r18, 0x08	; 8
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	05 c0       	rjmp	.+10     	; 0xda2 <__stack+0x4a3>
     d98:	20 e1       	ldi	r18, 0x10	; 16
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <__stack+0x4a3>
     d9e:	20 e1       	ldi	r18, 0x10	; 16
     da0:	32 e0       	ldi	r19, 0x02	; 2
     da2:	56 01       	movw	r10, r12
     da4:	07 ff       	sbrs	r16, 7
     da6:	09 c0       	rjmp	.+18     	; 0xdba <__stack+0x4bb>
     da8:	84 e0       	ldi	r24, 0x04	; 4
     daa:	a8 0e       	add	r10, r24
     dac:	b1 1c       	adc	r11, r1
     dae:	f6 01       	movw	r30, r12
     db0:	60 81       	ld	r22, Z
     db2:	71 81       	ldd	r23, Z+1	; 0x01
     db4:	82 81       	ldd	r24, Z+2	; 0x02
     db6:	93 81       	ldd	r25, Z+3	; 0x03
     db8:	08 c0       	rjmp	.+16     	; 0xdca <__stack+0x4cb>
     dba:	f2 e0       	ldi	r31, 0x02	; 2
     dbc:	af 0e       	add	r10, r31
     dbe:	b1 1c       	adc	r11, r1
     dc0:	f6 01       	movw	r30, r12
     dc2:	60 81       	ld	r22, Z
     dc4:	71 81       	ldd	r23, Z+1	; 0x01
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	a3 01       	movw	r20, r6
     dcc:	0e 94 1c 09 	call	0x1238	; 0x1238 <__ultoa_invert>
     dd0:	c8 2e       	mov	r12, r24
     dd2:	c6 18       	sub	r12, r6
     dd4:	0f 77       	andi	r16, 0x7F	; 127
     dd6:	90 2e       	mov	r9, r16
     dd8:	96 fe       	sbrs	r9, 6
     dda:	0b c0       	rjmp	.+22     	; 0xdf2 <__stack+0x4f3>
     ddc:	09 2d       	mov	r16, r9
     dde:	0e 7f       	andi	r16, 0xFE	; 254
     de0:	c1 16       	cp	r12, r17
     de2:	50 f4       	brcc	.+20     	; 0xdf8 <__stack+0x4f9>
     de4:	94 fe       	sbrs	r9, 4
     de6:	0a c0       	rjmp	.+20     	; 0xdfc <__stack+0x4fd>
     de8:	92 fc       	sbrc	r9, 2
     dea:	08 c0       	rjmp	.+16     	; 0xdfc <__stack+0x4fd>
     dec:	09 2d       	mov	r16, r9
     dee:	0e 7e       	andi	r16, 0xEE	; 238
     df0:	05 c0       	rjmp	.+10     	; 0xdfc <__stack+0x4fd>
     df2:	dc 2c       	mov	r13, r12
     df4:	09 2d       	mov	r16, r9
     df6:	03 c0       	rjmp	.+6      	; 0xdfe <__stack+0x4ff>
     df8:	dc 2c       	mov	r13, r12
     dfa:	01 c0       	rjmp	.+2      	; 0xdfe <__stack+0x4ff>
     dfc:	d1 2e       	mov	r13, r17
     dfe:	04 ff       	sbrs	r16, 4
     e00:	0d c0       	rjmp	.+26     	; 0xe1c <__stack+0x51d>
     e02:	fe 01       	movw	r30, r28
     e04:	ec 0d       	add	r30, r12
     e06:	f1 1d       	adc	r31, r1
     e08:	80 81       	ld	r24, Z
     e0a:	80 33       	cpi	r24, 0x30	; 48
     e0c:	11 f4       	brne	.+4      	; 0xe12 <__stack+0x513>
     e0e:	09 7e       	andi	r16, 0xE9	; 233
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <__stack+0x525>
     e12:	02 ff       	sbrs	r16, 2
     e14:	06 c0       	rjmp	.+12     	; 0xe22 <__stack+0x523>
     e16:	d3 94       	inc	r13
     e18:	d3 94       	inc	r13
     e1a:	04 c0       	rjmp	.+8      	; 0xe24 <__stack+0x525>
     e1c:	80 2f       	mov	r24, r16
     e1e:	86 78       	andi	r24, 0x86	; 134
     e20:	09 f0       	breq	.+2      	; 0xe24 <__stack+0x525>
     e22:	d3 94       	inc	r13
     e24:	03 fd       	sbrc	r16, 3
     e26:	11 c0       	rjmp	.+34     	; 0xe4a <__stack+0x54b>
     e28:	00 ff       	sbrs	r16, 0
     e2a:	06 c0       	rjmp	.+12     	; 0xe38 <__stack+0x539>
     e2c:	1c 2d       	mov	r17, r12
     e2e:	d5 14       	cp	r13, r5
     e30:	80 f4       	brcc	.+32     	; 0xe52 <__stack+0x553>
     e32:	15 0d       	add	r17, r5
     e34:	1d 19       	sub	r17, r13
     e36:	0d c0       	rjmp	.+26     	; 0xe52 <__stack+0x553>
     e38:	d5 14       	cp	r13, r5
     e3a:	58 f4       	brcc	.+22     	; 0xe52 <__stack+0x553>
     e3c:	b7 01       	movw	r22, r14
     e3e:	80 e2       	ldi	r24, 0x20	; 32
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     e46:	d3 94       	inc	r13
     e48:	f7 cf       	rjmp	.-18     	; 0xe38 <__stack+0x539>
     e4a:	d5 14       	cp	r13, r5
     e4c:	10 f4       	brcc	.+4      	; 0xe52 <__stack+0x553>
     e4e:	5d 18       	sub	r5, r13
     e50:	01 c0       	rjmp	.+2      	; 0xe54 <__stack+0x555>
     e52:	51 2c       	mov	r5, r1
     e54:	04 ff       	sbrs	r16, 4
     e56:	10 c0       	rjmp	.+32     	; 0xe78 <__stack+0x579>
     e58:	b7 01       	movw	r22, r14
     e5a:	80 e3       	ldi	r24, 0x30	; 48
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     e62:	02 ff       	sbrs	r16, 2
     e64:	17 c0       	rjmp	.+46     	; 0xe94 <__stack+0x595>
     e66:	01 fd       	sbrc	r16, 1
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <__stack+0x571>
     e6a:	88 e7       	ldi	r24, 0x78	; 120
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <__stack+0x575>
     e70:	88 e5       	ldi	r24, 0x58	; 88
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	b7 01       	movw	r22, r14
     e76:	0c c0       	rjmp	.+24     	; 0xe90 <__stack+0x591>
     e78:	80 2f       	mov	r24, r16
     e7a:	86 78       	andi	r24, 0x86	; 134
     e7c:	59 f0       	breq	.+22     	; 0xe94 <__stack+0x595>
     e7e:	01 ff       	sbrs	r16, 1
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <__stack+0x587>
     e82:	8b e2       	ldi	r24, 0x2B	; 43
     e84:	01 c0       	rjmp	.+2      	; 0xe88 <__stack+0x589>
     e86:	80 e2       	ldi	r24, 0x20	; 32
     e88:	07 fd       	sbrc	r16, 7
     e8a:	8d e2       	ldi	r24, 0x2D	; 45
     e8c:	b7 01       	movw	r22, r14
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     e94:	c1 16       	cp	r12, r17
     e96:	38 f4       	brcc	.+14     	; 0xea6 <__stack+0x5a7>
     e98:	b7 01       	movw	r22, r14
     e9a:	80 e3       	ldi	r24, 0x30	; 48
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     ea2:	11 50       	subi	r17, 0x01	; 1
     ea4:	f7 cf       	rjmp	.-18     	; 0xe94 <__stack+0x595>
     ea6:	ca 94       	dec	r12
     ea8:	f3 01       	movw	r30, r6
     eaa:	ec 0d       	add	r30, r12
     eac:	f1 1d       	adc	r31, r1
     eae:	80 81       	ld	r24, Z
     eb0:	b7 01       	movw	r22, r14
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     eb8:	c1 10       	cpse	r12, r1
     eba:	f5 cf       	rjmp	.-22     	; 0xea6 <__stack+0x5a7>
     ebc:	15 c0       	rjmp	.+42     	; 0xee8 <__stack+0x5e9>
     ebe:	f4 e0       	ldi	r31, 0x04	; 4
     ec0:	f5 15       	cp	r31, r5
     ec2:	60 f5       	brcc	.+88     	; 0xf1c <__stack+0x61d>
     ec4:	84 e0       	ldi	r24, 0x04	; 4
     ec6:	58 1a       	sub	r5, r24
     ec8:	93 fe       	sbrs	r9, 3
     eca:	1f c0       	rjmp	.+62     	; 0xf0a <__stack+0x60b>
     ecc:	01 11       	cpse	r16, r1
     ece:	27 c0       	rjmp	.+78     	; 0xf1e <__stack+0x61f>
     ed0:	2c 85       	ldd	r18, Y+12	; 0x0c
     ed2:	23 ff       	sbrs	r18, 3
     ed4:	2a c0       	rjmp	.+84     	; 0xf2a <__stack+0x62b>
     ed6:	08 e6       	ldi	r16, 0x68	; 104
     ed8:	10 e0       	ldi	r17, 0x00	; 0
     eda:	39 2d       	mov	r19, r9
     edc:	30 71       	andi	r19, 0x10	; 16
     ede:	93 2e       	mov	r9, r19
     ee0:	f8 01       	movw	r30, r16
     ee2:	84 91       	lpm	r24, Z
     ee4:	81 11       	cpse	r24, r1
     ee6:	24 c0       	rjmp	.+72     	; 0xf30 <__stack+0x631>
     ee8:	55 20       	and	r5, r5
     eea:	09 f4       	brne	.+2      	; 0xeee <__stack+0x5ef>
     eec:	e4 cc       	rjmp	.-1592   	; 0x8b6 <vfprintf+0x58>
     eee:	b7 01       	movw	r22, r14
     ef0:	80 e2       	ldi	r24, 0x20	; 32
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     ef8:	5a 94       	dec	r5
     efa:	f6 cf       	rjmp	.-20     	; 0xee8 <__stack+0x5e9>
     efc:	f7 01       	movw	r30, r14
     efe:	86 81       	ldd	r24, Z+6	; 0x06
     f00:	97 81       	ldd	r25, Z+7	; 0x07
     f02:	26 c0       	rjmp	.+76     	; 0xf50 <__stack+0x651>
     f04:	8f ef       	ldi	r24, 0xFF	; 255
     f06:	9f ef       	ldi	r25, 0xFF	; 255
     f08:	23 c0       	rjmp	.+70     	; 0xf50 <__stack+0x651>
     f0a:	b7 01       	movw	r22, r14
     f0c:	80 e2       	ldi	r24, 0x20	; 32
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     f14:	5a 94       	dec	r5
     f16:	51 10       	cpse	r5, r1
     f18:	f8 cf       	rjmp	.-16     	; 0xf0a <__stack+0x60b>
     f1a:	d8 cf       	rjmp	.-80     	; 0xecc <__stack+0x5cd>
     f1c:	51 2c       	mov	r5, r1
     f1e:	b7 01       	movw	r22, r14
     f20:	80 2f       	mov	r24, r16
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     f28:	d3 cf       	rjmp	.-90     	; 0xed0 <__stack+0x5d1>
     f2a:	0c e6       	ldi	r16, 0x6C	; 108
     f2c:	10 e0       	ldi	r17, 0x00	; 0
     f2e:	d5 cf       	rjmp	.-86     	; 0xeda <__stack+0x5db>
     f30:	91 10       	cpse	r9, r1
     f32:	80 52       	subi	r24, 0x20	; 32
     f34:	b7 01       	movw	r22, r14
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <fputc>
     f3c:	0f 5f       	subi	r16, 0xFF	; 255
     f3e:	1f 4f       	sbci	r17, 0xFF	; 255
     f40:	cf cf       	rjmp	.-98     	; 0xee0 <__stack+0x5e1>
     f42:	23 e0       	ldi	r18, 0x03	; 3
     f44:	25 15       	cp	r18, r5
     f46:	10 f4       	brcc	.+4      	; 0xf4c <__stack+0x64d>
     f48:	83 e0       	ldi	r24, 0x03	; 3
     f4a:	bd cf       	rjmp	.-134    	; 0xec6 <__stack+0x5c7>
     f4c:	51 2c       	mov	r5, r1
     f4e:	c0 cf       	rjmp	.-128    	; 0xed0 <__stack+0x5d1>
     f50:	60 96       	adiw	r28, 0x10	; 16
     f52:	e2 e1       	ldi	r30, 0x12	; 18
     f54:	0c 94 d7 07 	jmp	0xfae	; 0xfae <__epilogue_restores__>

00000f58 <__umulhisi3>:
     f58:	a2 9f       	mul	r26, r18
     f5a:	b0 01       	movw	r22, r0
     f5c:	b3 9f       	mul	r27, r19
     f5e:	c0 01       	movw	r24, r0
     f60:	a3 9f       	mul	r26, r19
     f62:	70 0d       	add	r23, r0
     f64:	81 1d       	adc	r24, r1
     f66:	11 24       	eor	r1, r1
     f68:	91 1d       	adc	r25, r1
     f6a:	b2 9f       	mul	r27, r18
     f6c:	70 0d       	add	r23, r0
     f6e:	81 1d       	adc	r24, r1
     f70:	11 24       	eor	r1, r1
     f72:	91 1d       	adc	r25, r1
     f74:	08 95       	ret

00000f76 <__prologue_saves__>:
     f76:	2f 92       	push	r2
     f78:	3f 92       	push	r3
     f7a:	4f 92       	push	r4
     f7c:	5f 92       	push	r5
     f7e:	6f 92       	push	r6
     f80:	7f 92       	push	r7
     f82:	8f 92       	push	r8
     f84:	9f 92       	push	r9
     f86:	af 92       	push	r10
     f88:	bf 92       	push	r11
     f8a:	cf 92       	push	r12
     f8c:	df 92       	push	r13
     f8e:	ef 92       	push	r14
     f90:	ff 92       	push	r15
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	cd b7       	in	r28, 0x3d	; 61
     f9c:	de b7       	in	r29, 0x3e	; 62
     f9e:	ca 1b       	sub	r28, r26
     fa0:	db 0b       	sbc	r29, r27
     fa2:	0f b6       	in	r0, 0x3f	; 63
     fa4:	f8 94       	cli
     fa6:	de bf       	out	0x3e, r29	; 62
     fa8:	0f be       	out	0x3f, r0	; 63
     faa:	cd bf       	out	0x3d, r28	; 61
     fac:	09 94       	ijmp

00000fae <__epilogue_restores__>:
     fae:	2a 88       	ldd	r2, Y+18	; 0x12
     fb0:	39 88       	ldd	r3, Y+17	; 0x11
     fb2:	48 88       	ldd	r4, Y+16	; 0x10
     fb4:	5f 84       	ldd	r5, Y+15	; 0x0f
     fb6:	6e 84       	ldd	r6, Y+14	; 0x0e
     fb8:	7d 84       	ldd	r7, Y+13	; 0x0d
     fba:	8c 84       	ldd	r8, Y+12	; 0x0c
     fbc:	9b 84       	ldd	r9, Y+11	; 0x0b
     fbe:	aa 84       	ldd	r10, Y+10	; 0x0a
     fc0:	b9 84       	ldd	r11, Y+9	; 0x09
     fc2:	c8 84       	ldd	r12, Y+8	; 0x08
     fc4:	df 80       	ldd	r13, Y+7	; 0x07
     fc6:	ee 80       	ldd	r14, Y+6	; 0x06
     fc8:	fd 80       	ldd	r15, Y+5	; 0x05
     fca:	0c 81       	ldd	r16, Y+4	; 0x04
     fcc:	1b 81       	ldd	r17, Y+3	; 0x03
     fce:	aa 81       	ldd	r26, Y+2	; 0x02
     fd0:	b9 81       	ldd	r27, Y+1	; 0x01
     fd2:	ce 0f       	add	r28, r30
     fd4:	d1 1d       	adc	r29, r1
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	f8 94       	cli
     fda:	de bf       	out	0x3e, r29	; 62
     fdc:	0f be       	out	0x3f, r0	; 63
     fde:	cd bf       	out	0x3d, r28	; 61
     fe0:	ed 01       	movw	r28, r26
     fe2:	08 95       	ret

00000fe4 <__ftoa_engine>:
     fe4:	28 30       	cpi	r18, 0x08	; 8
     fe6:	08 f0       	brcs	.+2      	; 0xfea <__ftoa_engine+0x6>
     fe8:	27 e0       	ldi	r18, 0x07	; 7
     fea:	33 27       	eor	r19, r19
     fec:	da 01       	movw	r26, r20
     fee:	99 0f       	add	r25, r25
     ff0:	31 1d       	adc	r19, r1
     ff2:	87 fd       	sbrc	r24, 7
     ff4:	91 60       	ori	r25, 0x01	; 1
     ff6:	00 96       	adiw	r24, 0x00	; 0
     ff8:	61 05       	cpc	r22, r1
     ffa:	71 05       	cpc	r23, r1
     ffc:	39 f4       	brne	.+14     	; 0x100c <__ftoa_engine+0x28>
     ffe:	32 60       	ori	r19, 0x02	; 2
    1000:	2e 5f       	subi	r18, 0xFE	; 254
    1002:	3d 93       	st	X+, r19
    1004:	30 e3       	ldi	r19, 0x30	; 48
    1006:	2a 95       	dec	r18
    1008:	e1 f7       	brne	.-8      	; 0x1002 <__ftoa_engine+0x1e>
    100a:	08 95       	ret
    100c:	9f 3f       	cpi	r25, 0xFF	; 255
    100e:	30 f0       	brcs	.+12     	; 0x101c <__ftoa_engine+0x38>
    1010:	80 38       	cpi	r24, 0x80	; 128
    1012:	71 05       	cpc	r23, r1
    1014:	61 05       	cpc	r22, r1
    1016:	09 f0       	breq	.+2      	; 0x101a <__ftoa_engine+0x36>
    1018:	3c 5f       	subi	r19, 0xFC	; 252
    101a:	3c 5f       	subi	r19, 0xFC	; 252
    101c:	3d 93       	st	X+, r19
    101e:	91 30       	cpi	r25, 0x01	; 1
    1020:	08 f0       	brcs	.+2      	; 0x1024 <__ftoa_engine+0x40>
    1022:	80 68       	ori	r24, 0x80	; 128
    1024:	91 1d       	adc	r25, r1
    1026:	df 93       	push	r29
    1028:	cf 93       	push	r28
    102a:	1f 93       	push	r17
    102c:	0f 93       	push	r16
    102e:	ff 92       	push	r15
    1030:	ef 92       	push	r14
    1032:	19 2f       	mov	r17, r25
    1034:	98 7f       	andi	r25, 0xF8	; 248
    1036:	96 95       	lsr	r25
    1038:	e9 2f       	mov	r30, r25
    103a:	96 95       	lsr	r25
    103c:	96 95       	lsr	r25
    103e:	e9 0f       	add	r30, r25
    1040:	ff 27       	eor	r31, r31
    1042:	e6 53       	subi	r30, 0x36	; 54
    1044:	ff 4f       	sbci	r31, 0xFF	; 255
    1046:	99 27       	eor	r25, r25
    1048:	33 27       	eor	r19, r19
    104a:	ee 24       	eor	r14, r14
    104c:	ff 24       	eor	r15, r15
    104e:	a7 01       	movw	r20, r14
    1050:	e7 01       	movw	r28, r14
    1052:	05 90       	lpm	r0, Z+
    1054:	08 94       	sec
    1056:	07 94       	ror	r0
    1058:	28 f4       	brcc	.+10     	; 0x1064 <__ftoa_engine+0x80>
    105a:	36 0f       	add	r19, r22
    105c:	e7 1e       	adc	r14, r23
    105e:	f8 1e       	adc	r15, r24
    1060:	49 1f       	adc	r20, r25
    1062:	51 1d       	adc	r21, r1
    1064:	66 0f       	add	r22, r22
    1066:	77 1f       	adc	r23, r23
    1068:	88 1f       	adc	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	06 94       	lsr	r0
    106e:	a1 f7       	brne	.-24     	; 0x1058 <__ftoa_engine+0x74>
    1070:	05 90       	lpm	r0, Z+
    1072:	07 94       	ror	r0
    1074:	28 f4       	brcc	.+10     	; 0x1080 <__ftoa_engine+0x9c>
    1076:	e7 0e       	add	r14, r23
    1078:	f8 1e       	adc	r15, r24
    107a:	49 1f       	adc	r20, r25
    107c:	56 1f       	adc	r21, r22
    107e:	c1 1d       	adc	r28, r1
    1080:	77 0f       	add	r23, r23
    1082:	88 1f       	adc	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	66 1f       	adc	r22, r22
    1088:	06 94       	lsr	r0
    108a:	a1 f7       	brne	.-24     	; 0x1074 <__ftoa_engine+0x90>
    108c:	05 90       	lpm	r0, Z+
    108e:	07 94       	ror	r0
    1090:	28 f4       	brcc	.+10     	; 0x109c <__ftoa_engine+0xb8>
    1092:	f8 0e       	add	r15, r24
    1094:	49 1f       	adc	r20, r25
    1096:	56 1f       	adc	r21, r22
    1098:	c7 1f       	adc	r28, r23
    109a:	d1 1d       	adc	r29, r1
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	66 1f       	adc	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	06 94       	lsr	r0
    10a6:	a1 f7       	brne	.-24     	; 0x1090 <__ftoa_engine+0xac>
    10a8:	05 90       	lpm	r0, Z+
    10aa:	07 94       	ror	r0
    10ac:	20 f4       	brcc	.+8      	; 0x10b6 <__ftoa_engine+0xd2>
    10ae:	49 0f       	add	r20, r25
    10b0:	56 1f       	adc	r21, r22
    10b2:	c7 1f       	adc	r28, r23
    10b4:	d8 1f       	adc	r29, r24
    10b6:	99 0f       	add	r25, r25
    10b8:	66 1f       	adc	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	06 94       	lsr	r0
    10c0:	a9 f7       	brne	.-22     	; 0x10ac <__ftoa_engine+0xc8>
    10c2:	84 91       	lpm	r24, Z
    10c4:	10 95       	com	r17
    10c6:	17 70       	andi	r17, 0x07	; 7
    10c8:	41 f0       	breq	.+16     	; 0x10da <__ftoa_engine+0xf6>
    10ca:	d6 95       	lsr	r29
    10cc:	c7 95       	ror	r28
    10ce:	57 95       	ror	r21
    10d0:	47 95       	ror	r20
    10d2:	f7 94       	ror	r15
    10d4:	e7 94       	ror	r14
    10d6:	1a 95       	dec	r17
    10d8:	c1 f7       	brne	.-16     	; 0x10ca <__ftoa_engine+0xe6>
    10da:	e0 e7       	ldi	r30, 0x70	; 112
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	68 94       	set
    10e0:	15 90       	lpm	r1, Z+
    10e2:	15 91       	lpm	r17, Z+
    10e4:	35 91       	lpm	r19, Z+
    10e6:	65 91       	lpm	r22, Z+
    10e8:	95 91       	lpm	r25, Z+
    10ea:	05 90       	lpm	r0, Z+
    10ec:	7f e2       	ldi	r23, 0x2F	; 47
    10ee:	73 95       	inc	r23
    10f0:	e1 18       	sub	r14, r1
    10f2:	f1 0a       	sbc	r15, r17
    10f4:	43 0b       	sbc	r20, r19
    10f6:	56 0b       	sbc	r21, r22
    10f8:	c9 0b       	sbc	r28, r25
    10fa:	d0 09       	sbc	r29, r0
    10fc:	c0 f7       	brcc	.-16     	; 0x10ee <__ftoa_engine+0x10a>
    10fe:	e1 0c       	add	r14, r1
    1100:	f1 1e       	adc	r15, r17
    1102:	43 1f       	adc	r20, r19
    1104:	56 1f       	adc	r21, r22
    1106:	c9 1f       	adc	r28, r25
    1108:	d0 1d       	adc	r29, r0
    110a:	7e f4       	brtc	.+30     	; 0x112a <__ftoa_engine+0x146>
    110c:	70 33       	cpi	r23, 0x30	; 48
    110e:	11 f4       	brne	.+4      	; 0x1114 <__ftoa_engine+0x130>
    1110:	8a 95       	dec	r24
    1112:	e6 cf       	rjmp	.-52     	; 0x10e0 <__ftoa_engine+0xfc>
    1114:	e8 94       	clt
    1116:	01 50       	subi	r16, 0x01	; 1
    1118:	30 f0       	brcs	.+12     	; 0x1126 <__ftoa_engine+0x142>
    111a:	08 0f       	add	r16, r24
    111c:	0a f4       	brpl	.+2      	; 0x1120 <__ftoa_engine+0x13c>
    111e:	00 27       	eor	r16, r16
    1120:	02 17       	cp	r16, r18
    1122:	08 f4       	brcc	.+2      	; 0x1126 <__ftoa_engine+0x142>
    1124:	20 2f       	mov	r18, r16
    1126:	23 95       	inc	r18
    1128:	02 2f       	mov	r16, r18
    112a:	7a 33       	cpi	r23, 0x3A	; 58
    112c:	28 f0       	brcs	.+10     	; 0x1138 <__ftoa_engine+0x154>
    112e:	79 e3       	ldi	r23, 0x39	; 57
    1130:	7d 93       	st	X+, r23
    1132:	2a 95       	dec	r18
    1134:	e9 f7       	brne	.-6      	; 0x1130 <__ftoa_engine+0x14c>
    1136:	10 c0       	rjmp	.+32     	; 0x1158 <__ftoa_engine+0x174>
    1138:	7d 93       	st	X+, r23
    113a:	2a 95       	dec	r18
    113c:	89 f6       	brne	.-94     	; 0x10e0 <__ftoa_engine+0xfc>
    113e:	06 94       	lsr	r0
    1140:	97 95       	ror	r25
    1142:	67 95       	ror	r22
    1144:	37 95       	ror	r19
    1146:	17 95       	ror	r17
    1148:	17 94       	ror	r1
    114a:	e1 18       	sub	r14, r1
    114c:	f1 0a       	sbc	r15, r17
    114e:	43 0b       	sbc	r20, r19
    1150:	56 0b       	sbc	r21, r22
    1152:	c9 0b       	sbc	r28, r25
    1154:	d0 09       	sbc	r29, r0
    1156:	98 f0       	brcs	.+38     	; 0x117e <__ftoa_engine+0x19a>
    1158:	23 95       	inc	r18
    115a:	7e 91       	ld	r23, -X
    115c:	73 95       	inc	r23
    115e:	7a 33       	cpi	r23, 0x3A	; 58
    1160:	08 f0       	brcs	.+2      	; 0x1164 <__ftoa_engine+0x180>
    1162:	70 e3       	ldi	r23, 0x30	; 48
    1164:	7c 93       	st	X, r23
    1166:	20 13       	cpse	r18, r16
    1168:	b8 f7       	brcc	.-18     	; 0x1158 <__ftoa_engine+0x174>
    116a:	7e 91       	ld	r23, -X
    116c:	70 61       	ori	r23, 0x10	; 16
    116e:	7d 93       	st	X+, r23
    1170:	30 f0       	brcs	.+12     	; 0x117e <__ftoa_engine+0x19a>
    1172:	83 95       	inc	r24
    1174:	71 e3       	ldi	r23, 0x31	; 49
    1176:	7d 93       	st	X+, r23
    1178:	70 e3       	ldi	r23, 0x30	; 48
    117a:	2a 95       	dec	r18
    117c:	e1 f7       	brne	.-8      	; 0x1176 <__ftoa_engine+0x192>
    117e:	11 24       	eor	r1, r1
    1180:	ef 90       	pop	r14
    1182:	ff 90       	pop	r15
    1184:	0f 91       	pop	r16
    1186:	1f 91       	pop	r17
    1188:	cf 91       	pop	r28
    118a:	df 91       	pop	r29
    118c:	99 27       	eor	r25, r25
    118e:	87 fd       	sbrc	r24, 7
    1190:	90 95       	com	r25
    1192:	08 95       	ret

00001194 <strnlen_P>:
    1194:	fc 01       	movw	r30, r24
    1196:	05 90       	lpm	r0, Z+
    1198:	61 50       	subi	r22, 0x01	; 1
    119a:	70 40       	sbci	r23, 0x00	; 0
    119c:	01 10       	cpse	r0, r1
    119e:	d8 f7       	brcc	.-10     	; 0x1196 <strnlen_P+0x2>
    11a0:	80 95       	com	r24
    11a2:	90 95       	com	r25
    11a4:	8e 0f       	add	r24, r30
    11a6:	9f 1f       	adc	r25, r31
    11a8:	08 95       	ret

000011aa <strnlen>:
    11aa:	fc 01       	movw	r30, r24
    11ac:	61 50       	subi	r22, 0x01	; 1
    11ae:	70 40       	sbci	r23, 0x00	; 0
    11b0:	01 90       	ld	r0, Z+
    11b2:	01 10       	cpse	r0, r1
    11b4:	d8 f7       	brcc	.-10     	; 0x11ac <strnlen+0x2>
    11b6:	80 95       	com	r24
    11b8:	90 95       	com	r25
    11ba:	8e 0f       	add	r24, r30
    11bc:	9f 1f       	adc	r25, r31
    11be:	08 95       	ret

000011c0 <fputc>:
    11c0:	0f 93       	push	r16
    11c2:	1f 93       	push	r17
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	fb 01       	movw	r30, r22
    11ca:	23 81       	ldd	r18, Z+3	; 0x03
    11cc:	21 fd       	sbrc	r18, 1
    11ce:	03 c0       	rjmp	.+6      	; 0x11d6 <fputc+0x16>
    11d0:	8f ef       	ldi	r24, 0xFF	; 255
    11d2:	9f ef       	ldi	r25, 0xFF	; 255
    11d4:	2c c0       	rjmp	.+88     	; 0x122e <fputc+0x6e>
    11d6:	22 ff       	sbrs	r18, 2
    11d8:	16 c0       	rjmp	.+44     	; 0x1206 <fputc+0x46>
    11da:	46 81       	ldd	r20, Z+6	; 0x06
    11dc:	57 81       	ldd	r21, Z+7	; 0x07
    11de:	24 81       	ldd	r18, Z+4	; 0x04
    11e0:	35 81       	ldd	r19, Z+5	; 0x05
    11e2:	42 17       	cp	r20, r18
    11e4:	53 07       	cpc	r21, r19
    11e6:	44 f4       	brge	.+16     	; 0x11f8 <fputc+0x38>
    11e8:	a0 81       	ld	r26, Z
    11ea:	b1 81       	ldd	r27, Z+1	; 0x01
    11ec:	9d 01       	movw	r18, r26
    11ee:	2f 5f       	subi	r18, 0xFF	; 255
    11f0:	3f 4f       	sbci	r19, 0xFF	; 255
    11f2:	31 83       	std	Z+1, r19	; 0x01
    11f4:	20 83       	st	Z, r18
    11f6:	8c 93       	st	X, r24
    11f8:	26 81       	ldd	r18, Z+6	; 0x06
    11fa:	37 81       	ldd	r19, Z+7	; 0x07
    11fc:	2f 5f       	subi	r18, 0xFF	; 255
    11fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1200:	37 83       	std	Z+7, r19	; 0x07
    1202:	26 83       	std	Z+6, r18	; 0x06
    1204:	14 c0       	rjmp	.+40     	; 0x122e <fputc+0x6e>
    1206:	8b 01       	movw	r16, r22
    1208:	ec 01       	movw	r28, r24
    120a:	fb 01       	movw	r30, r22
    120c:	00 84       	ldd	r0, Z+8	; 0x08
    120e:	f1 85       	ldd	r31, Z+9	; 0x09
    1210:	e0 2d       	mov	r30, r0
    1212:	09 95       	icall
    1214:	89 2b       	or	r24, r25
    1216:	e1 f6       	brne	.-72     	; 0x11d0 <fputc+0x10>
    1218:	d8 01       	movw	r26, r16
    121a:	16 96       	adiw	r26, 0x06	; 6
    121c:	8d 91       	ld	r24, X+
    121e:	9c 91       	ld	r25, X
    1220:	17 97       	sbiw	r26, 0x07	; 7
    1222:	01 96       	adiw	r24, 0x01	; 1
    1224:	17 96       	adiw	r26, 0x07	; 7
    1226:	9c 93       	st	X, r25
    1228:	8e 93       	st	-X, r24
    122a:	16 97       	sbiw	r26, 0x06	; 6
    122c:	ce 01       	movw	r24, r28
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	1f 91       	pop	r17
    1234:	0f 91       	pop	r16
    1236:	08 95       	ret

00001238 <__ultoa_invert>:
    1238:	fa 01       	movw	r30, r20
    123a:	aa 27       	eor	r26, r26
    123c:	28 30       	cpi	r18, 0x08	; 8
    123e:	51 f1       	breq	.+84     	; 0x1294 <__ultoa_invert+0x5c>
    1240:	20 31       	cpi	r18, 0x10	; 16
    1242:	81 f1       	breq	.+96     	; 0x12a4 <__ultoa_invert+0x6c>
    1244:	e8 94       	clt
    1246:	6f 93       	push	r22
    1248:	6e 7f       	andi	r22, 0xFE	; 254
    124a:	6e 5f       	subi	r22, 0xFE	; 254
    124c:	7f 4f       	sbci	r23, 0xFF	; 255
    124e:	8f 4f       	sbci	r24, 0xFF	; 255
    1250:	9f 4f       	sbci	r25, 0xFF	; 255
    1252:	af 4f       	sbci	r26, 0xFF	; 255
    1254:	b1 e0       	ldi	r27, 0x01	; 1
    1256:	3e d0       	rcall	.+124    	; 0x12d4 <__ultoa_invert+0x9c>
    1258:	b4 e0       	ldi	r27, 0x04	; 4
    125a:	3c d0       	rcall	.+120    	; 0x12d4 <__ultoa_invert+0x9c>
    125c:	67 0f       	add	r22, r23
    125e:	78 1f       	adc	r23, r24
    1260:	89 1f       	adc	r24, r25
    1262:	9a 1f       	adc	r25, r26
    1264:	a1 1d       	adc	r26, r1
    1266:	68 0f       	add	r22, r24
    1268:	79 1f       	adc	r23, r25
    126a:	8a 1f       	adc	r24, r26
    126c:	91 1d       	adc	r25, r1
    126e:	a1 1d       	adc	r26, r1
    1270:	6a 0f       	add	r22, r26
    1272:	71 1d       	adc	r23, r1
    1274:	81 1d       	adc	r24, r1
    1276:	91 1d       	adc	r25, r1
    1278:	a1 1d       	adc	r26, r1
    127a:	20 d0       	rcall	.+64     	; 0x12bc <__ultoa_invert+0x84>
    127c:	09 f4       	brne	.+2      	; 0x1280 <__ultoa_invert+0x48>
    127e:	68 94       	set
    1280:	3f 91       	pop	r19
    1282:	2a e0       	ldi	r18, 0x0A	; 10
    1284:	26 9f       	mul	r18, r22
    1286:	11 24       	eor	r1, r1
    1288:	30 19       	sub	r19, r0
    128a:	30 5d       	subi	r19, 0xD0	; 208
    128c:	31 93       	st	Z+, r19
    128e:	de f6       	brtc	.-74     	; 0x1246 <__ultoa_invert+0xe>
    1290:	cf 01       	movw	r24, r30
    1292:	08 95       	ret
    1294:	46 2f       	mov	r20, r22
    1296:	47 70       	andi	r20, 0x07	; 7
    1298:	40 5d       	subi	r20, 0xD0	; 208
    129a:	41 93       	st	Z+, r20
    129c:	b3 e0       	ldi	r27, 0x03	; 3
    129e:	0f d0       	rcall	.+30     	; 0x12be <__ultoa_invert+0x86>
    12a0:	c9 f7       	brne	.-14     	; 0x1294 <__ultoa_invert+0x5c>
    12a2:	f6 cf       	rjmp	.-20     	; 0x1290 <__ultoa_invert+0x58>
    12a4:	46 2f       	mov	r20, r22
    12a6:	4f 70       	andi	r20, 0x0F	; 15
    12a8:	40 5d       	subi	r20, 0xD0	; 208
    12aa:	4a 33       	cpi	r20, 0x3A	; 58
    12ac:	18 f0       	brcs	.+6      	; 0x12b4 <__ultoa_invert+0x7c>
    12ae:	49 5d       	subi	r20, 0xD9	; 217
    12b0:	31 fd       	sbrc	r19, 1
    12b2:	40 52       	subi	r20, 0x20	; 32
    12b4:	41 93       	st	Z+, r20
    12b6:	02 d0       	rcall	.+4      	; 0x12bc <__ultoa_invert+0x84>
    12b8:	a9 f7       	brne	.-22     	; 0x12a4 <__ultoa_invert+0x6c>
    12ba:	ea cf       	rjmp	.-44     	; 0x1290 <__ultoa_invert+0x58>
    12bc:	b4 e0       	ldi	r27, 0x04	; 4
    12be:	a6 95       	lsr	r26
    12c0:	97 95       	ror	r25
    12c2:	87 95       	ror	r24
    12c4:	77 95       	ror	r23
    12c6:	67 95       	ror	r22
    12c8:	ba 95       	dec	r27
    12ca:	c9 f7       	brne	.-14     	; 0x12be <__ultoa_invert+0x86>
    12cc:	00 97       	sbiw	r24, 0x00	; 0
    12ce:	61 05       	cpc	r22, r1
    12d0:	71 05       	cpc	r23, r1
    12d2:	08 95       	ret
    12d4:	9b 01       	movw	r18, r22
    12d6:	ac 01       	movw	r20, r24
    12d8:	0a 2e       	mov	r0, r26
    12da:	06 94       	lsr	r0
    12dc:	57 95       	ror	r21
    12de:	47 95       	ror	r20
    12e0:	37 95       	ror	r19
    12e2:	27 95       	ror	r18
    12e4:	ba 95       	dec	r27
    12e6:	c9 f7       	brne	.-14     	; 0x12da <__ultoa_invert+0xa2>
    12e8:	62 0f       	add	r22, r18
    12ea:	73 1f       	adc	r23, r19
    12ec:	84 1f       	adc	r24, r20
    12ee:	95 1f       	adc	r25, r21
    12f0:	a0 1d       	adc	r26, r0
    12f2:	08 95       	ret

000012f4 <_exit>:
    12f4:	f8 94       	cli

000012f6 <__stop_program>:
    12f6:	ff cf       	rjmp	.-2      	; 0x12f6 <__stop_program>
